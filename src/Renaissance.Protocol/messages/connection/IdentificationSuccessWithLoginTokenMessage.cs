//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:41.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.connection
{
	public class IdentificationSuccessWithLoginTokenMessage : IdentificationSuccessMessage, IDofusMessage
	{
		public new const int NetworkId = 6209;
		public new int ProtocolId { get { return NetworkId; } }

		public string LoginToken { get; set; }


		public IdentificationSuccessWithLoginTokenMessage() { }


		public IdentificationSuccessWithLoginTokenMessage InitIdentificationSuccessWithLoginTokenMessage(string _login, string _nickname, int _accountid, byte _communityid, WrappedBool _hasrights, string _secretquestion, double _accountcreation, double _subscriptionelapsedduration, double _subscriptionenddate, WrappedBool _wasalreadyconnected, byte _havenbagavailableroom, string _logintoken)
		{

			base.Login = _login;
			base.Nickname = _nickname;
			base.AccountId = _accountid;
			base.CommunityId = _communityid;
			base.HasRights = _hasrights;
			base.SecretQuestion = _secretquestion;
			base.AccountCreation = _accountcreation;
			base.SubscriptionElapsedDuration = _subscriptionelapsedduration;
			base.SubscriptionEndDate = _subscriptionenddate;
			base.WasAlreadyConnected = _wasalreadyconnected;
			base.HavenbagAvailableRoom = _havenbagavailableroom;
			this.LoginToken = _logintoken;

			return this;
		}

		public new Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(LoginToken);
			var parent = base.Serialize();
			size += parent.Length;


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteDatas(parent);
			writer.WriteData(this.LoginToken);

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			this.LoginToken = reader.Read<string>();

		}


	}
}
