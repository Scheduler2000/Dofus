//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:41.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.connection
{
	public class HelloConnectMessage : IDofusMessage
	{
		public  const int NetworkId = 3;
		public  int ProtocolId { get { return NetworkId; } }

		public string Salt { get; set; }

		public byte[] Key { get; set; }


		public HelloConnectMessage() { }


		public HelloConnectMessage InitHelloConnectMessage(string _salt, byte[] _key)
		{

			this.Salt = _salt;
			this.Key = _key;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(Salt);
			size += DofusBinaryFactory.Sizing.SizeOf((CustomVar<int>)(this.Key.Length));
			size += DofusBinaryFactory.Sizing.SizeOf(Key);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.Salt);
			writer.WriteData((CustomVar<int>)(this.Key.Length));
			writer.WriteDatas(Key);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.Salt = reader.Read<string>();
			int Key_length = reader.Read<CustomVar<int>>();
			this.Key = new byte[Key_length];
			for(int i = 0; i < Key_length; i++)
				this.Key[i] = reader.Read<byte>();

		}


	}
}
