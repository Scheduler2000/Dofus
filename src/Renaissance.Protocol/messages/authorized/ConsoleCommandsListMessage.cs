//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:07.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.authorized
{
	public class ConsoleCommandsListMessage : IDofusMessage
	{
		public  const int NetworkId = 6127;
		public  int ProtocolId { get { return NetworkId; } }

		public string[] Aliases { get; set; }

		public string[] Args { get; set; }

		public string[] Descriptions { get; set; }


		public ConsoleCommandsListMessage() { }


		public ConsoleCommandsListMessage InitConsoleCommandsListMessage(string[] _aliases, string[] _args, string[] _descriptions)
		{

			this.Aliases = _aliases;
			this.Args = _args;
			this.Descriptions = _descriptions;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write((short)(this.Aliases.Length));
			foreach(var item in Aliases)
				writer.Write(item);
			writer.Write((short)(this.Args.Length));
			foreach(var item in Args)
				writer.Write(item);
			writer.Write((short)(this.Descriptions.Length));
			foreach(var item in Descriptions)
				writer.Write(item);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			int Aliases_length = reader.Read<short>();
			this.Aliases = new string[Aliases_length];
			for(int i = 0; i < Aliases_length; i++)
				this.Aliases[i] = reader.Read<string>();
			int Args_length = reader.Read<short>();
			this.Args = new string[Args_length];
			for(int i = 0; i < Args_length; i++)
				this.Args[i] = reader.Read<string>();
			int Descriptions_length = reader.Read<short>();
			this.Descriptions = new string[Descriptions_length];
			for(int i = 0; i < Descriptions_length; i++)
				this.Descriptions[i] = reader.Read<string>();

		}


	}
}
