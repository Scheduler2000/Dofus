//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:07.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.common.basic;

namespace Renaissance.Protocol.messages.common.basic
{
	public class BasicStatWithDataMessage : BasicStatMessage, IDofusMessage
	{
		public new const int NetworkId = 6573;
		public new int ProtocolId { get { return NetworkId; } }

		public StatisticData[] Datas { get; set; }


		public BasicStatWithDataMessage() { }


		public BasicStatWithDataMessage InitBasicStatWithDataMessage(StatisticData[] _datas)
		{

			this.Datas = _datas;

			return this;
		}

		public new byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(base.Serialize());
			writer.Write((short)(this.Datas.Length));
			foreach(var obj in Datas)
			{
				writer.Write((short)(obj.ProtocolId));
				writer.Write(obj.Serialize());
			}

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			int Datas_length = reader.Read<short>();
			this.Datas = new StatisticData[Datas_length];
			for(int i = 0; i < Datas_length; i++)
			{
reader.Skip(2); // skip read short for protocolManager.GetInstance(short)
				this.Datas[i] = new StatisticData();
				this.Datas[i].Deserialize(reader);
			}

		}


	}
}
