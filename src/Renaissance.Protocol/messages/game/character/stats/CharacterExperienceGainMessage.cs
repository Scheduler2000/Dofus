//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:48.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.game.character.stats
{
	public class CharacterExperienceGainMessage : IDofusMessage
	{
		public  const int NetworkId = 6321;
		public  int ProtocolId { get { return NetworkId; } }

		public CustomVar<long> ExperienceCharacter { get; set; }

		public CustomVar<long> ExperienceMount { get; set; }

		public CustomVar<long> ExperienceGuild { get; set; }

		public CustomVar<long> ExperienceIncarnation { get; set; }


		public CharacterExperienceGainMessage() { }


		public CharacterExperienceGainMessage InitCharacterExperienceGainMessage(CustomVar<long> _experiencecharacter, CustomVar<long> _experiencemount, CustomVar<long> _experienceguild, CustomVar<long> _experienceincarnation)
		{

			this.ExperienceCharacter = _experiencecharacter;
			this.ExperienceMount = _experiencemount;
			this.ExperienceGuild = _experienceguild;
			this.ExperienceIncarnation = _experienceincarnation;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(ExperienceCharacter);
			size += DofusBinaryFactory.Sizing.SizeOf(ExperienceMount);
			size += DofusBinaryFactory.Sizing.SizeOf(ExperienceGuild);
			size += DofusBinaryFactory.Sizing.SizeOf(ExperienceIncarnation);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.ExperienceCharacter);
			writer.WriteData(this.ExperienceMount);
			writer.WriteData(this.ExperienceGuild);
			writer.WriteData(this.ExperienceIncarnation);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.ExperienceCharacter = reader.Read<CustomVar<long>>();
			this.ExperienceMount = reader.Read<CustomVar<long>>();
			this.ExperienceGuild = reader.Read<CustomVar<long>>();
			this.ExperienceIncarnation = reader.Read<CustomVar<long>>();

		}


	}
}
