//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:48.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.game.character.creation
{
	public class CharacterCreationRequestMessage : IDofusMessage
	{
		public  const int NetworkId = 160;
		public  int ProtocolId { get { return NetworkId; } }

		public string Name { get; set; }

		public byte Breed { get; set; }

		public bool Sex { get; set; }

		public int[] Colors { get; set; }

		public CustomVar<short> CosmeticId { get; set; }


		public CharacterCreationRequestMessage() { }


		public CharacterCreationRequestMessage InitCharacterCreationRequestMessage(string _name, byte _breed, bool _sex, int[] _colors, CustomVar<short> _cosmeticid)
		{

			this.Name = _name;
			this.Breed = _breed;
			this.Sex = _sex;
			this.Colors = _colors;
			this.CosmeticId = _cosmeticid;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(Name);
			size += DofusBinaryFactory.Sizing.SizeOf(Breed);
			size += DofusBinaryFactory.Sizing.SizeOf(Sex);
			size += DofusBinaryFactory.Sizing.SizeOf(Colors);
			size += DofusBinaryFactory.Sizing.SizeOf(CosmeticId);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.Name);
			writer.WriteData(this.Breed);
			writer.WriteData(this.Sex);
			writer.WriteDatas(Colors);
			writer.WriteData(this.CosmeticId);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.Name = reader.Read<string>();
			this.Breed = reader.Read<byte>();
			this.Sex = reader.Read<bool>();
			int Colors_length = 5;
			this.Colors = new int[Colors_length];
			for(int i = 0; i < Colors_length; i++)
				this.Colors[i] = reader.Read<int>();
			this.CosmeticId = reader.Read<CustomVar<short>>();

		}


	}
}
