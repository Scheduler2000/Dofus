//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:46.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.game.pvp
{
	public class UpdateMapPlayersAgressableStatusMessage : IDofusMessage
	{
		public  const int NetworkId = 6454;
		public  int ProtocolId { get { return NetworkId; } }

		public CustomVar<long>[] PlayerIds { get; set; }

		public byte[] Enable { get; set; }


		public UpdateMapPlayersAgressableStatusMessage() { }


		public UpdateMapPlayersAgressableStatusMessage InitUpdateMapPlayersAgressableStatusMessage(CustomVar<long>[] _playerids, byte[] _enable)
		{

			this.PlayerIds = _playerids;
			this.Enable = _enable;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.PlayerIds.Length));
			size += DofusBinaryFactory.Sizing.SizeOf(PlayerIds);
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.Enable.Length));
			size += DofusBinaryFactory.Sizing.SizeOf(Enable);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData((short)(this.PlayerIds.Length));
			writer.WriteDatas(PlayerIds);
			writer.WriteData((short)(this.Enable.Length));
			writer.WriteDatas(Enable);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			int PlayerIds_length = reader.Read<short>();
			this.PlayerIds = new CustomVar<long>[PlayerIds_length];
			for(int i = 0; i < PlayerIds_length; i++)
				this.PlayerIds[i] = reader.Read<CustomVar<long>>();
			int Enable_length = reader.Read<short>();
			this.Enable = new byte[Enable_length];
			for(int i = 0; i < Enable_length; i++)
				this.Enable[i] = reader.Read<byte>();

		}


	}
}
