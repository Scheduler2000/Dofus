//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:19.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.context.roleplay;

namespace Renaissance.Protocol.messages.game.guild.tax
{
	public class TaxCollectorAttackedMessage : IDofusMessage
	{
		public  const int NetworkId = 5918;
		public  int ProtocolId { get { return NetworkId; } }

		public CustomVar<short> FirstNameId { get; set; }

		public CustomVar<short> LastNameId { get; set; }

		public short WorldX { get; set; }

		public short WorldY { get; set; }

		public double MapId { get; set; }

		public CustomVar<short> SubAreaId { get; set; }

		public BasicGuildInformations Guild { get; set; }


		public TaxCollectorAttackedMessage() { }


		public TaxCollectorAttackedMessage InitTaxCollectorAttackedMessage(CustomVar<short> _firstnameid, CustomVar<short> _lastnameid, short _worldx, short _worldy, double _mapid, CustomVar<short> _subareaid, BasicGuildInformations _guild)
		{

			this.FirstNameId = _firstnameid;
			this.LastNameId = _lastnameid;
			this.WorldX = _worldx;
			this.WorldY = _worldy;
			this.MapId = _mapid;
			this.SubAreaId = _subareaid;
			this.Guild = _guild;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(this.FirstNameId);
			writer.Write(this.LastNameId);
			writer.Write(this.WorldX);
			writer.Write(this.WorldY);
			writer.Write(this.MapId);
			writer.Write(this.SubAreaId);
			writer.Write(this.Guild.Serialize());

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.FirstNameId = reader.Read<CustomVar<short>>();
			this.LastNameId = reader.Read<CustomVar<short>>();
			this.WorldX = reader.Read<short>();
			this.WorldY = reader.Read<short>();
			this.MapId = reader.Read<double>();
			this.SubAreaId = reader.Read<CustomVar<short>>();
			this.Guild = new BasicGuildInformations();
			this.Guild.Deserialize(reader);

		}


	}
}
