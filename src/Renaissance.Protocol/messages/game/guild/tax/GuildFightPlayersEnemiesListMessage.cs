//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:50.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.character;

namespace Renaissance.Protocol.messages.game.guild.tax
{
	public class GuildFightPlayersEnemiesListMessage : IDofusMessage
	{
		public  const int NetworkId = 5928;
		public  int ProtocolId { get { return NetworkId; } }

		public double FightId { get; set; }

		public CharacterMinimalPlusLookInformations[] PlayerInfo { get; set; }


		public GuildFightPlayersEnemiesListMessage() { }


		public GuildFightPlayersEnemiesListMessage InitGuildFightPlayersEnemiesListMessage(double _fightid, CharacterMinimalPlusLookInformations[] _playerinfo)
		{

			this.FightId = _fightid;
			this.PlayerInfo = _playerinfo;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(FightId);
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.PlayerInfo.Length));
			var memory1 = new Memory<byte>[PlayerInfo.Length];
			for(int i = 0; i < PlayerInfo.Length; i++)
			{
				memory1[i] = this.PlayerInfo[i].Serialize();
				size += memory1[i].Length;
			}


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.FightId);
			writer.WriteData((short)(this.PlayerInfo.Length));
			for(int i = 0; i < memory1.Length; i++)
			{
				writer.WriteDatas(memory1[i]);
			}

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.FightId = reader.Read<double>();
			int PlayerInfo_length = reader.Read<short>();
			this.PlayerInfo = new CharacterMinimalPlusLookInformations[PlayerInfo_length];
			for(int i = 0; i < PlayerInfo_length; i++)
			{
				this.PlayerInfo[i] = new CharacterMinimalPlusLookInformations();
				this.PlayerInfo[i].Deserialize(reader);
			}

		}


	}
}
