//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:43.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.game.approach
{
	public class ServerOptionalFeaturesMessage : IDofusMessage
	{
		public  const int NetworkId = 6305;
		public  int ProtocolId { get { return NetworkId; } }

		public byte[] Features { get; set; }


		public ServerOptionalFeaturesMessage() { }


		public ServerOptionalFeaturesMessage InitServerOptionalFeaturesMessage(byte[] _features)
		{

			this.Features = _features;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.Features.Length));
			size += DofusBinaryFactory.Sizing.SizeOf(Features);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData((short)(this.Features.Length));
			writer.WriteDatas(Features);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			int Features_length = reader.Read<short>();
			this.Features = new byte[Features_length];
			for(int i = 0; i < Features_length; i++)
				this.Features[i] = reader.Read<byte>();

		}


	}
}
