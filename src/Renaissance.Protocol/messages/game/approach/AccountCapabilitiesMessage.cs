//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:09.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.game.approach
{
	public class AccountCapabilitiesMessage : IDofusMessage
	{
		public  const int NetworkId = 6216;
		public  int ProtocolId { get { return NetworkId; } }

		public int AccountId { get; set; }

		public WrappedBool TutorialAvailable { get; set; }

		public CustomVar<int> BreedsVisible { get; set; }

		public CustomVar<int> BreedsAvailable { get; set; }

		public byte Status { get; set; }

		public WrappedBool CanCreateNewCharacter { get; set; }

		public double UnlimitedRestatEndDate { get; set; }


		public AccountCapabilitiesMessage() { }


		public AccountCapabilitiesMessage InitAccountCapabilitiesMessage(int _accountid, WrappedBool _tutorialavailable, CustomVar<int> _breedsvisible, CustomVar<int> _breedsavailable, byte _status, WrappedBool _cancreatenewcharacter, double _unlimitedrestatenddate)
		{

			this.AccountId = _accountid;
			this.TutorialAvailable = _tutorialavailable;
			this.BreedsVisible = _breedsvisible;
			this.BreedsAvailable = _breedsavailable;
			this.Status = _status;
			this.CanCreateNewCharacter = _cancreatenewcharacter;
			this.UnlimitedRestatEndDate = _unlimitedrestatenddate;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			byte box = 0;
			box = writer.SetFlag(box,0,this.TutorialAvailable);
			box = writer.SetFlag(box,1,this.CanCreateNewCharacter);
			writer.Write(box);
			writer.Write(this.AccountId);
			writer.Write(this.BreedsVisible);
			writer.Write(this.BreedsAvailable);
			writer.Write(this.Status);
			writer.Write(this.UnlimitedRestatEndDate);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			byte box = reader.Read<byte>();
			this.TutorialAvailable = reader.ReadFlag(box,0);
			this.CanCreateNewCharacter = reader.ReadFlag(box,1);
			this.AccountId = reader.Read<int>();
			this.BreedsVisible = reader.Read<CustomVar<int>>();
			this.BreedsAvailable = reader.Read<CustomVar<int>>();
			this.Status = reader.Read<byte>();
			this.UnlimitedRestatEndDate = reader.Read<double>();

		}


	}
}
