//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:48.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.game.chat.channel
{
	public class EnabledChannelsMessage : IDofusMessage
	{
		public  const int NetworkId = 892;
		public  int ProtocolId { get { return NetworkId; } }

		public byte[] Channels { get; set; }

		public byte[] Disallowed { get; set; }


		public EnabledChannelsMessage() { }


		public EnabledChannelsMessage InitEnabledChannelsMessage(byte[] _channels, byte[] _disallowed)
		{

			this.Channels = _channels;
			this.Disallowed = _disallowed;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.Channels.Length));
			size += DofusBinaryFactory.Sizing.SizeOf(Channels);
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.Disallowed.Length));
			size += DofusBinaryFactory.Sizing.SizeOf(Disallowed);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData((short)(this.Channels.Length));
			writer.WriteDatas(Channels);
			writer.WriteData((short)(this.Disallowed.Length));
			writer.WriteDatas(Disallowed);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			int Channels_length = reader.Read<short>();
			this.Channels = new byte[Channels_length];
			for(int i = 0; i < Channels_length; i++)
				this.Channels[i] = reader.Read<byte>();
			int Disallowed_length = reader.Read<short>();
			this.Disallowed = new byte[Disallowed_length];
			for(int i = 0; i < Disallowed_length; i++)
				this.Disallowed[i] = reader.Read<byte>();

		}


	}
}
