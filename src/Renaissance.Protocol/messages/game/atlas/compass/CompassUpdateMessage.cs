//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:48.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.context;

namespace Renaissance.Protocol.messages.game.atlas.compass
{
	public class CompassUpdateMessage : IDofusMessage
	{
		public  const int NetworkId = 5591;
		public  int ProtocolId { get { return NetworkId; } }

		public byte Type { get; set; }

		public MapCoordinates Coords { get; set; }


		public CompassUpdateMessage() { }


		public CompassUpdateMessage InitCompassUpdateMessage(byte _type, MapCoordinates _coords)
		{

			this.Type = _type;
			this.Coords = _coords;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(Type);
			size += 2;
			var serialized1 = this.Coords.Serialize();
			size += serialized1.Length;


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.Type);
			writer.WriteData((short)(Coords.ProtocolId));
			writer.WriteDatas(serialized1);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.Type = reader.Read<byte>();
			reader.Skip(2); // skip protocolManager.GetInstance(short)
			this.Coords = new MapCoordinates();
			this.Coords.Deserialize(reader);

		}


	}
}
