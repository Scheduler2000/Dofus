//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:48.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.context;

namespace Renaissance.Protocol.messages.game.atlas.compass
{
	public class CompassUpdatePvpSeekMessage : CompassUpdateMessage, IDofusMessage
	{
		public new const int NetworkId = 6013;
		public new int ProtocolId { get { return NetworkId; } }

		public CustomVar<long> MemberId { get; set; }

		public string MemberName { get; set; }


		public CompassUpdatePvpSeekMessage() { }


		public CompassUpdatePvpSeekMessage InitCompassUpdatePvpSeekMessage(byte _type, MapCoordinates _coords, CustomVar<long> _memberid, string _membername)
		{

			base.Type = _type;
			base.Coords = _coords;
			this.MemberId = _memberid;
			this.MemberName = _membername;

			return this;
		}

		public new Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(MemberId);
			size += DofusBinaryFactory.Sizing.SizeOf(MemberName);
			var parent = base.Serialize();
			size += parent.Length;


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteDatas(parent);
			writer.WriteData(this.MemberId);
			writer.WriteData(this.MemberName);

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			this.MemberId = reader.Read<CustomVar<long>>();
			this.MemberName = reader.Read<string>();

		}


	}
}
