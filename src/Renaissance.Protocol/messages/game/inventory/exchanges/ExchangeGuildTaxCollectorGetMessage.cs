//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:51.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.data.items;

namespace Renaissance.Protocol.messages.game.inventory.exchanges
{
	public class ExchangeGuildTaxCollectorGetMessage : IDofusMessage
	{
		public  const int NetworkId = 5762;
		public  int ProtocolId { get { return NetworkId; } }

		public string CollectorName { get; set; }

		public short WorldX { get; set; }

		public short WorldY { get; set; }

		public double MapId { get; set; }

		public CustomVar<short> SubAreaId { get; set; }

		public string UserName { get; set; }

		public CustomVar<long> CallerId { get; set; }

		public string CallerName { get; set; }

		public double Experience { get; set; }

		public CustomVar<short> Pods { get; set; }

		public ObjectItemGenericQuantity[] ObjectsInfos { get; set; }


		public ExchangeGuildTaxCollectorGetMessage() { }


		public ExchangeGuildTaxCollectorGetMessage InitExchangeGuildTaxCollectorGetMessage(string _collectorname, short _worldx, short _worldy, double _mapid, CustomVar<short> _subareaid, string _username, CustomVar<long> _callerid, string _callername, double _experience, CustomVar<short> _pods, ObjectItemGenericQuantity[] _objectsinfos)
		{

			this.CollectorName = _collectorname;
			this.WorldX = _worldx;
			this.WorldY = _worldy;
			this.MapId = _mapid;
			this.SubAreaId = _subareaid;
			this.UserName = _username;
			this.CallerId = _callerid;
			this.CallerName = _callername;
			this.Experience = _experience;
			this.Pods = _pods;
			this.ObjectsInfos = _objectsinfos;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(CollectorName);
			size += DofusBinaryFactory.Sizing.SizeOf(WorldX);
			size += DofusBinaryFactory.Sizing.SizeOf(WorldY);
			size += DofusBinaryFactory.Sizing.SizeOf(MapId);
			size += DofusBinaryFactory.Sizing.SizeOf(SubAreaId);
			size += DofusBinaryFactory.Sizing.SizeOf(UserName);
			size += DofusBinaryFactory.Sizing.SizeOf(CallerId);
			size += DofusBinaryFactory.Sizing.SizeOf(CallerName);
			size += DofusBinaryFactory.Sizing.SizeOf(Experience);
			size += DofusBinaryFactory.Sizing.SizeOf(Pods);
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.ObjectsInfos.Length));
			var memory1 = new Memory<byte>[ObjectsInfos.Length];
			for(int i = 0; i < ObjectsInfos.Length; i++)
			{
				memory1[i] = this.ObjectsInfos[i].Serialize();
				size += memory1[i].Length;
			}


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.CollectorName);
			writer.WriteData(this.WorldX);
			writer.WriteData(this.WorldY);
			writer.WriteData(this.MapId);
			writer.WriteData(this.SubAreaId);
			writer.WriteData(this.UserName);
			writer.WriteData(this.CallerId);
			writer.WriteData(this.CallerName);
			writer.WriteData(this.Experience);
			writer.WriteData(this.Pods);
			writer.WriteData((short)(this.ObjectsInfos.Length));
			for(int i = 0; i < memory1.Length; i++)
			{
				writer.WriteDatas(memory1[i]);
			}

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.CollectorName = reader.Read<string>();
			this.WorldX = reader.Read<short>();
			this.WorldY = reader.Read<short>();
			this.MapId = reader.Read<double>();
			this.SubAreaId = reader.Read<CustomVar<short>>();
			this.UserName = reader.Read<string>();
			this.CallerId = reader.Read<CustomVar<long>>();
			this.CallerName = reader.Read<string>();
			this.Experience = reader.Read<double>();
			this.Pods = reader.Read<CustomVar<short>>();
			int ObjectsInfos_length = reader.Read<short>();
			this.ObjectsInfos = new ObjectItemGenericQuantity[ObjectsInfos_length];
			for(int i = 0; i < ObjectsInfos_length; i++)
			{
				this.ObjectsInfos[i] = new ObjectItemGenericQuantity();
				this.ObjectsInfos[i].Deserialize(reader);
			}

		}


	}
}
