//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:20.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.game.inventory.exchanges
{
	public class ExchangeHandleMountsMessage : IDofusMessage
	{
		public  const int NetworkId = 6752;
		public  int ProtocolId { get { return NetworkId; } }

		public byte ActionType { get; set; }

		public CustomVar<int>[] RidesId { get; set; }


		public ExchangeHandleMountsMessage() { }


		public ExchangeHandleMountsMessage InitExchangeHandleMountsMessage(byte _actiontype, CustomVar<int>[] _ridesid)
		{

			this.ActionType = _actiontype;
			this.RidesId = _ridesid;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(this.ActionType);
			writer.Write((short)(this.RidesId.Length));
			foreach(var item in RidesId)
				writer.Write(item);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.ActionType = reader.Read<byte>();
			int RidesId_length = reader.Read<short>();
			this.RidesId = new CustomVar<int>[RidesId_length];
			for(int i = 0; i < RidesId_length; i++)
				this.RidesId[i] = reader.Read<CustomVar<int>>();

		}


	}
}
