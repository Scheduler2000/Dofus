//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:51.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.game.inventory.exchanges
{
	public class ExchangeMountsPaddockRemoveMessage : IDofusMessage
	{
		public  const int NetworkId = 6559;
		public  int ProtocolId { get { return NetworkId; } }

		public CustomVar<int>[] MountsId { get; set; }


		public ExchangeMountsPaddockRemoveMessage() { }


		public ExchangeMountsPaddockRemoveMessage InitExchangeMountsPaddockRemoveMessage(CustomVar<int>[] _mountsid)
		{

			this.MountsId = _mountsid;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.MountsId.Length));
			size += DofusBinaryFactory.Sizing.SizeOf(MountsId);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData((short)(this.MountsId.Length));
			writer.WriteDatas(MountsId);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			int MountsId_length = reader.Read<short>();
			this.MountsId = new CustomVar<int>[MountsId_length];
			for(int i = 0; i < MountsId_length; i++)
				this.MountsId[i] = reader.Read<CustomVar<int>>();

		}


	}
}
