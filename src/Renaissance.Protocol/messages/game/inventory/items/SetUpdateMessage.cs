//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:53.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.data.items.effects;

namespace Renaissance.Protocol.messages.game.inventory.items
{
	public class SetUpdateMessage : IDofusMessage
	{
		public  const int NetworkId = 5503;
		public  int ProtocolId { get { return NetworkId; } }

		public CustomVar<short> SetId { get; set; }

		public CustomVar<short>[] SetObjects { get; set; }

		public ObjectEffect[] SetEffects { get; set; }


		public SetUpdateMessage() { }


		public SetUpdateMessage InitSetUpdateMessage(CustomVar<short> _setid, CustomVar<short>[] _setobjects, ObjectEffect[] _seteffects)
		{

			this.SetId = _setid;
			this.SetObjects = _setobjects;
			this.SetEffects = _seteffects;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(SetId);
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.SetObjects.Length));
			size += DofusBinaryFactory.Sizing.SizeOf(SetObjects);
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.SetEffects.Length));
			var memory1 = new Memory<byte>[SetEffects.Length];
			for(int i = 0; i < SetEffects.Length; i++)
			{
				size += DofusBinaryFactory.Sizing.SizeOf((short)(this.SetEffects[i].ProtocolId));
				memory1[i] = this.SetEffects[i].Serialize();
				size += memory1[i].Length;
			}


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.SetId);
			writer.WriteData((short)(this.SetObjects.Length));
			writer.WriteDatas(SetObjects);
			writer.WriteData((short)(this.SetEffects.Length));
			for(int i = 0; i < memory1.Length; i++)
			{
				writer.WriteData((short)(SetEffects[i].ProtocolId));
				writer.WriteDatas(memory1[i]);
			}

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.SetId = reader.Read<CustomVar<short>>();
			int SetObjects_length = reader.Read<short>();
			this.SetObjects = new CustomVar<short>[SetObjects_length];
			for(int i = 0; i < SetObjects_length; i++)
				this.SetObjects[i] = reader.Read<CustomVar<short>>();
			int SetEffects_length = reader.Read<short>();
			this.SetEffects = new ObjectEffect[SetEffects_length];
			for(int i = 0; i < SetEffects_length; i++)
			{
			reader.Skip(2); // skip protocolManager.GetInstance(short)
				this.SetEffects[i] = new ObjectEffect();
				this.SetEffects[i].Deserialize(reader);
			}

		}


	}
}
