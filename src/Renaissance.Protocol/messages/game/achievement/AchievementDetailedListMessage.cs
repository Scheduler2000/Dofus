//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:08.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.achievement;

namespace Renaissance.Protocol.messages.game.achievement
{
	public class AchievementDetailedListMessage : IDofusMessage
	{
		public  const int NetworkId = 6358;
		public  int ProtocolId { get { return NetworkId; } }

		public Achievement[] StartedAchievements { get; set; }

		public Achievement[] FinishedAchievements { get; set; }


		public AchievementDetailedListMessage() { }


		public AchievementDetailedListMessage InitAchievementDetailedListMessage(Achievement[] _startedachievements, Achievement[] _finishedachievements)
		{

			this.StartedAchievements = _startedachievements;
			this.FinishedAchievements = _finishedachievements;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write((short)(this.StartedAchievements.Length));
			foreach(var obj in StartedAchievements)
			{
				writer.Write(obj.Serialize());
			}
			writer.Write((short)(this.FinishedAchievements.Length));
			foreach(var obj in FinishedAchievements)
			{
				writer.Write(obj.Serialize());
			}

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			int StartedAchievements_length = reader.Read<short>();
			this.StartedAchievements = new Achievement[StartedAchievements_length];
			for(int i = 0; i < StartedAchievements_length; i++)
			{
				this.StartedAchievements[i] = new Achievement();
				this.StartedAchievements[i].Deserialize(reader);
			}
			int FinishedAchievements_length = reader.Read<short>();
			this.FinishedAchievements = new Achievement[FinishedAchievements_length];
			for(int i = 0; i < FinishedAchievements_length; i++)
			{
				this.FinishedAchievements[i] = new Achievement();
				this.FinishedAchievements[i].Deserialize(reader);
			}

		}


	}
}
