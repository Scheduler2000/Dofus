//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:41.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.achievement;

namespace Renaissance.Protocol.messages.game.achievement
{
	public class AchievementDetailedListMessage : IDofusMessage
	{
		public  const int NetworkId = 6358;
		public  int ProtocolId { get { return NetworkId; } }

		public Achievement[] StartedAchievements { get; set; }

		public Achievement[] FinishedAchievements { get; set; }


		public AchievementDetailedListMessage() { }


		public AchievementDetailedListMessage InitAchievementDetailedListMessage(Achievement[] _startedachievements, Achievement[] _finishedachievements)
		{

			this.StartedAchievements = _startedachievements;
			this.FinishedAchievements = _finishedachievements;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.StartedAchievements.Length));
			var memory1 = new Memory<byte>[StartedAchievements.Length];
			for(int i = 0; i < StartedAchievements.Length; i++)
			{
				memory1[i] = this.StartedAchievements[i].Serialize();
				size += memory1[i].Length;
			}
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.FinishedAchievements.Length));
			var memory2 = new Memory<byte>[FinishedAchievements.Length];
			for(int i = 0; i < FinishedAchievements.Length; i++)
			{
				memory2[i] = this.FinishedAchievements[i].Serialize();
				size += memory2[i].Length;
			}


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData((short)(this.StartedAchievements.Length));
			for(int i = 0; i < memory1.Length; i++)
			{
				writer.WriteDatas(memory1[i]);
			}
			writer.WriteData((short)(this.FinishedAchievements.Length));
			for(int i = 0; i < memory2.Length; i++)
			{
				writer.WriteDatas(memory2[i]);
			}

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			int StartedAchievements_length = reader.Read<short>();
			this.StartedAchievements = new Achievement[StartedAchievements_length];
			for(int i = 0; i < StartedAchievements_length; i++)
			{
				this.StartedAchievements[i] = new Achievement();
				this.StartedAchievements[i].Deserialize(reader);
			}
			int FinishedAchievements_length = reader.Read<short>();
			this.FinishedAchievements = new Achievement[FinishedAchievements_length];
			for(int i = 0; i < FinishedAchievements_length; i++)
			{
				this.FinishedAchievements[i] = new Achievement();
				this.FinishedAchievements[i].Deserialize(reader);
			}

		}


	}
}
