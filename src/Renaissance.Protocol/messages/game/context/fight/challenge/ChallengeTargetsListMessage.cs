//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:23.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.game.context.fight.challenge
{
	public class ChallengeTargetsListMessage : IDofusMessage
	{
		public  const int NetworkId = 5613;
		public  int ProtocolId { get { return NetworkId; } }

		public double[] TargetIds { get; set; }

		public short[] TargetCells { get; set; }


		public ChallengeTargetsListMessage() { }


		public ChallengeTargetsListMessage InitChallengeTargetsListMessage(double[] _targetids, short[] _targetcells)
		{

			this.TargetIds = _targetids;
			this.TargetCells = _targetcells;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write((short)(this.TargetIds.Length));
			foreach(var item in TargetIds)
				writer.Write(item);
			writer.Write((short)(this.TargetCells.Length));
			foreach(var item in TargetCells)
				writer.Write(item);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			int TargetIds_length = reader.Read<short>();
			this.TargetIds = new double[TargetIds_length];
			for(int i = 0; i < TargetIds_length; i++)
				this.TargetIds[i] = reader.Read<double>();
			int TargetCells_length = reader.Read<short>();
			this.TargetCells = new short[TargetCells_length];
			for(int i = 0; i < TargetCells_length; i++)
				this.TargetCells[i] = reader.Read<short>();

		}


	}
}
