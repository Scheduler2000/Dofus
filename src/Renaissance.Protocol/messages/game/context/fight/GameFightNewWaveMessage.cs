//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:49.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.game.context.fight
{
	public class GameFightNewWaveMessage : IDofusMessage
	{
		public  const int NetworkId = 6490;
		public  int ProtocolId { get { return NetworkId; } }

		public byte Id { get; set; }

		public byte TeamId { get; set; }

		public short NbTurnBeforeNextWave { get; set; }


		public GameFightNewWaveMessage() { }


		public GameFightNewWaveMessage InitGameFightNewWaveMessage(byte _id, byte _teamid, short _nbturnbeforenextwave)
		{

			this.Id = _id;
			this.TeamId = _teamid;
			this.NbTurnBeforeNextWave = _nbturnbeforenextwave;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(Id);
			size += DofusBinaryFactory.Sizing.SizeOf(TeamId);
			size += DofusBinaryFactory.Sizing.SizeOf(NbTurnBeforeNextWave);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.Id);
			writer.WriteData(this.TeamId);
			writer.WriteData(this.NbTurnBeforeNextWave);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.Id = reader.Read<byte>();
			this.TeamId = reader.Read<byte>();
			this.NbTurnBeforeNextWave = reader.Read<short>();

		}


	}
}
