//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:17.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.context.fight;
using    Renaissance.Protocol.types.game.context.roleplay.party;

namespace Renaissance.Protocol.messages.game.context.fight
{
	public class GameFightEndMessage : IDofusMessage
	{
		public  const int NetworkId = 720;
		public  int ProtocolId { get { return NetworkId; } }

		public int Duration { get; set; }

		public CustomVar<short> RewardRate { get; set; }

		public short LootShareLimitMalus { get; set; }

		public FightResultListEntry[] Results { get; set; }

		public NamedPartyTeamWithOutcome[] NamedPartyTeamsOutcomes { get; set; }


		public GameFightEndMessage() { }


		public GameFightEndMessage InitGameFightEndMessage(int _duration, CustomVar<short> _rewardrate, short _lootsharelimitmalus, FightResultListEntry[] _results, NamedPartyTeamWithOutcome[] _namedpartyteamsoutcomes)
		{

			this.Duration = _duration;
			this.RewardRate = _rewardrate;
			this.LootShareLimitMalus = _lootsharelimitmalus;
			this.Results = _results;
			this.NamedPartyTeamsOutcomes = _namedpartyteamsoutcomes;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(this.Duration);
			writer.Write(this.RewardRate);
			writer.Write(this.LootShareLimitMalus);
			writer.Write((short)(this.Results.Length));
			foreach(var obj in Results)
			{
				writer.Write((short)(obj.ProtocolId));
				writer.Write(obj.Serialize());
			}
			writer.Write((short)(this.NamedPartyTeamsOutcomes.Length));
			foreach(var obj in NamedPartyTeamsOutcomes)
			{
				writer.Write(obj.Serialize());
			}

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.Duration = reader.Read<int>();
			this.RewardRate = reader.Read<CustomVar<short>>();
			this.LootShareLimitMalus = reader.Read<short>();
			int Results_length = reader.Read<short>();
			this.Results = new FightResultListEntry[Results_length];
			for(int i = 0; i < Results_length; i++)
			{
reader.Skip(2); // skip read short for protocolManager.GetInstance(short)
				this.Results[i] = new FightResultListEntry();
				this.Results[i].Deserialize(reader);
			}
			int NamedPartyTeamsOutcomes_length = reader.Read<short>();
			this.NamedPartyTeamsOutcomes = new NamedPartyTeamWithOutcome[NamedPartyTeamsOutcomes_length];
			for(int i = 0; i < NamedPartyTeamsOutcomes_length; i++)
			{
				this.NamedPartyTeamsOutcomes[i] = new NamedPartyTeamWithOutcome();
				this.NamedPartyTeamsOutcomes[i].Deserialize(reader);
			}

		}


	}
}
