//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:54.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.context.roleplay.job;
using    Renaissance.Protocol.types.game.context.roleplay.job;
using    Renaissance.Protocol.types.game.look;

namespace Renaissance.Protocol.messages.game.context.roleplay.job
{
	public class JobCrafterDirectoryEntryMessage : IDofusMessage
	{
		public  const int NetworkId = 6044;
		public  int ProtocolId { get { return NetworkId; } }

		public JobCrafterDirectoryEntryPlayerInfo PlayerInfo { get; set; }

		public JobCrafterDirectoryEntryJobInfo[] JobInfoList { get; set; }

		public EntityLook PlayerLook { get; set; }


		public JobCrafterDirectoryEntryMessage() { }


		public JobCrafterDirectoryEntryMessage InitJobCrafterDirectoryEntryMessage(JobCrafterDirectoryEntryPlayerInfo _playerinfo, JobCrafterDirectoryEntryJobInfo[] _jobinfolist, EntityLook _playerlook)
		{

			this.PlayerInfo = _playerinfo;
			this.JobInfoList = _jobinfolist;
			this.PlayerLook = _playerlook;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			var serialized1 = this.PlayerInfo.Serialize();
			size += serialized1.Length;
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.JobInfoList.Length));
			var memory1 = new Memory<byte>[JobInfoList.Length];
			for(int i = 0; i < JobInfoList.Length; i++)
			{
				memory1[i] = this.JobInfoList[i].Serialize();
				size += memory1[i].Length;
			}
			var serialized2 = this.PlayerLook.Serialize();
			size += serialized2.Length;


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteDatas(serialized1);
			writer.WriteData((short)(this.JobInfoList.Length));
			for(int i = 0; i < memory1.Length; i++)
			{
				writer.WriteDatas(memory1[i]);
			}
			writer.WriteDatas(serialized2);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.PlayerInfo = new JobCrafterDirectoryEntryPlayerInfo();
			this.PlayerInfo.Deserialize(reader);
			int JobInfoList_length = reader.Read<short>();
			this.JobInfoList = new JobCrafterDirectoryEntryJobInfo[JobInfoList_length];
			for(int i = 0; i < JobInfoList_length; i++)
			{
				this.JobInfoList[i] = new JobCrafterDirectoryEntryJobInfo();
				this.JobInfoList[i].Deserialize(reader);
			}
			this.PlayerLook = new EntityLook();
			this.PlayerLook.Deserialize(reader);

		}


	}
}
