//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:24.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using Renaissance.Binary;
using Renaissance.Protocol.types.game.context.roleplay.job;
using Renaissance.Protocol.types.game.look;

namespace Renaissance.Protocol.messages.game.context.roleplay.job
{
    public class JobCrafterDirectoryEntryMessage : IDofusMessage
	{
		public  const int NetworkId = 6044;
		public  int ProtocolId { get { return NetworkId; } }

		public JobCrafterDirectoryEntryPlayerInfo PlayerInfo { get; set; }

		public JobCrafterDirectoryEntryJobInfo[] JobInfoList { get; set; }

		public EntityLook PlayerLook { get; set; }


		public JobCrafterDirectoryEntryMessage() { }


		public JobCrafterDirectoryEntryMessage InitJobCrafterDirectoryEntryMessage(JobCrafterDirectoryEntryPlayerInfo _playerinfo, JobCrafterDirectoryEntryJobInfo[] _jobinfolist, EntityLook _playerlook)
		{

			this.PlayerInfo = _playerinfo;
			this.JobInfoList = _jobinfolist;
			this.PlayerLook = _playerlook;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(this.PlayerInfo.Serialize());
			writer.Write((short)(this.JobInfoList.Length));
			foreach(var obj in JobInfoList)
			{
				writer.Write(obj.Serialize());
			}
			writer.Write(this.PlayerLook.Serialize());

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.PlayerInfo = new JobCrafterDirectoryEntryPlayerInfo();
			this.PlayerInfo.Deserialize(reader);
			int JobInfoList_length = reader.Read<short>();
			this.JobInfoList = new JobCrafterDirectoryEntryJobInfo[JobInfoList_length];
			for(int i = 0; i < JobInfoList_length; i++)
			{
				this.JobInfoList[i] = new JobCrafterDirectoryEntryJobInfo();
				this.JobInfoList[i].Deserialize(reader);
			}
			this.PlayerLook = new EntityLook();
			this.PlayerLook.Deserialize(reader);

		}


	}
}
