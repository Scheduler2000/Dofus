//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:55.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.game.context.roleplay.job
{
	public class JobMultiCraftAvailableSkillsMessage : JobAllowMultiCraftRequestMessage, IDofusMessage
	{
		public new const int NetworkId = 5747;
		public new int ProtocolId { get { return NetworkId; } }

		public CustomVar<long> PlayerId { get; set; }

		public CustomVar<short>[] Skills { get; set; }


		public JobMultiCraftAvailableSkillsMessage() { }


		public JobMultiCraftAvailableSkillsMessage InitJobMultiCraftAvailableSkillsMessage(bool _enabled, CustomVar<long> _playerid, CustomVar<short>[] _skills)
		{

			base.Enabled = _enabled;
			this.PlayerId = _playerid;
			this.Skills = _skills;

			return this;
		}

		public new Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(PlayerId);
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.Skills.Length));
			size += DofusBinaryFactory.Sizing.SizeOf(Skills);
			var parent = base.Serialize();
			size += parent.Length;


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteDatas(parent);
			writer.WriteData(this.PlayerId);
			writer.WriteData((short)(this.Skills.Length));
			writer.WriteDatas(Skills);

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			this.PlayerId = reader.Read<CustomVar<long>>();
			int Skills_length = reader.Read<short>();
			this.Skills = new CustomVar<short>[Skills_length];
			for(int i = 0; i < Skills_length; i++)
				this.Skills[i] = reader.Read<CustomVar<short>>();

		}


	}
}
