//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:55.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.game.context.roleplay.lockable
{
	public class LockableStateUpdateStorageMessage : LockableStateUpdateAbstractMessage, IDofusMessage
	{
		public new const int NetworkId = 5669;
		public new int ProtocolId { get { return NetworkId; } }

		public double MapId { get; set; }

		public CustomVar<int> ElementId { get; set; }


		public LockableStateUpdateStorageMessage() { }


		public LockableStateUpdateStorageMessage InitLockableStateUpdateStorageMessage(bool _locked, double _mapid, CustomVar<int> _elementid)
		{

			base.Locked = _locked;
			this.MapId = _mapid;
			this.ElementId = _elementid;

			return this;
		}

		public new Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(MapId);
			size += DofusBinaryFactory.Sizing.SizeOf(ElementId);
			var parent = base.Serialize();
			size += parent.Length;


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteDatas(parent);
			writer.WriteData(this.MapId);
			writer.WriteData(this.ElementId);

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			this.MapId = reader.Read<double>();
			this.ElementId = reader.Read<CustomVar<int>>();

		}


	}
}
