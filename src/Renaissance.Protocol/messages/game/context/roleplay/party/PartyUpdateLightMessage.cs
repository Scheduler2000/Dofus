//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:56.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.game.context.roleplay.party
{
	public class PartyUpdateLightMessage : AbstractPartyEventMessage, IDofusMessage
	{
		public new const int NetworkId = 6054;
		public new int ProtocolId { get { return NetworkId; } }

		public CustomVar<long> Id { get; set; }

		public CustomVar<int> LifePoints { get; set; }

		public CustomVar<int> MaxLifePoints { get; set; }

		public CustomVar<short> Prospecting { get; set; }

		public byte RegenRate { get; set; }


		public PartyUpdateLightMessage() { }


		public PartyUpdateLightMessage InitPartyUpdateLightMessage(CustomVar<int> _partyid, CustomVar<long> _id, CustomVar<int> _lifepoints, CustomVar<int> _maxlifepoints, CustomVar<short> _prospecting, byte _regenrate)
		{

			base.PartyId = _partyid;
			this.Id = _id;
			this.LifePoints = _lifepoints;
			this.MaxLifePoints = _maxlifepoints;
			this.Prospecting = _prospecting;
			this.RegenRate = _regenrate;

			return this;
		}

		public new Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(Id);
			size += DofusBinaryFactory.Sizing.SizeOf(LifePoints);
			size += DofusBinaryFactory.Sizing.SizeOf(MaxLifePoints);
			size += DofusBinaryFactory.Sizing.SizeOf(Prospecting);
			size += DofusBinaryFactory.Sizing.SizeOf(RegenRate);
			var parent = base.Serialize();
			size += parent.Length;


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteDatas(parent);
			writer.WriteData(this.Id);
			writer.WriteData(this.LifePoints);
			writer.WriteData(this.MaxLifePoints);
			writer.WriteData(this.Prospecting);
			writer.WriteData(this.RegenRate);

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			this.Id = reader.Read<CustomVar<long>>();
			this.LifePoints = reader.Read<CustomVar<int>>();
			this.MaxLifePoints = reader.Read<CustomVar<int>>();
			this.Prospecting = reader.Read<CustomVar<short>>();
			this.RegenRate = reader.Read<byte>();

		}


	}
}
