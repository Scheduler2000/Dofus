//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:25.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using Renaissance.Binary;
using Renaissance.Binary.Definition;
using Renaissance.Protocol.types.game.context.roleplay.party;

namespace Renaissance.Protocol.messages.game.context.roleplay.party
{
    public class PartyJoinMessage : AbstractPartyMessage, IDofusMessage
	{
		public new const int NetworkId = 5576;
		public new int ProtocolId { get { return NetworkId; } }

		public byte PartyType { get; set; }

		public CustomVar<long> PartyLeaderId { get; set; }

		public byte MaxParticipants { get; set; }

		public PartyMemberInformations[] Members { get; set; }

		public PartyGuestInformations[] Guests { get; set; }

		public bool Restricted { get; set; }

		public string PartyName { get; set; }


		public PartyJoinMessage() { }


		public PartyJoinMessage InitPartyJoinMessage(byte _partytype, CustomVar<long> _partyleaderid, byte _maxparticipants, PartyMemberInformations[] _members, PartyGuestInformations[] _guests, bool _restricted, string _partyname)
		{

			this.PartyType = _partytype;
			this.PartyLeaderId = _partyleaderid;
			this.MaxParticipants = _maxparticipants;
			this.Members = _members;
			this.Guests = _guests;
			this.Restricted = _restricted;
			this.PartyName = _partyname;

			return this;
		}

		public new byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(base.Serialize());
			writer.Write(this.PartyType);
			writer.Write(this.PartyLeaderId);
			writer.Write(this.MaxParticipants);
			writer.Write((short)(this.Members.Length));
			foreach(var obj in Members)
			{
				writer.Write((short)(obj.ProtocolId));
				writer.Write(obj.Serialize());
			}
			writer.Write((short)(this.Guests.Length));
			foreach(var obj in Guests)
			{
				writer.Write(obj.Serialize());
			}
			writer.Write(this.Restricted);
			writer.Write(this.PartyName);

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			this.PartyType = reader.Read<byte>();
			this.PartyLeaderId = reader.Read<CustomVar<long>>();
			this.MaxParticipants = reader.Read<byte>();
			int Members_length = reader.Read<short>();
			this.Members = new PartyMemberInformations[Members_length];
			for(int i = 0; i < Members_length; i++)
			{
reader.Skip(2); // skip read short for protocolManager.GetInstance(short)
				this.Members[i] = new PartyMemberInformations();
				this.Members[i].Deserialize(reader);
			}
			int Guests_length = reader.Read<short>();
			this.Guests = new PartyGuestInformations[Guests_length];
			for(int i = 0; i < Guests_length; i++)
			{
				this.Guests[i] = new PartyGuestInformations();
				this.Guests[i].Deserialize(reader);
			}
			this.Restricted = reader.Read<bool>();
			this.PartyName = reader.Read<string>();

		}


	}
}
