//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:55.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.game.context.roleplay.party
{
	public class AbstractPartyMemberInFightMessage : AbstractPartyMessage, IDofusMessage
	{
		public new const int NetworkId = 6825;
		public new int ProtocolId { get { return NetworkId; } }

		public byte Reason { get; set; }

		public CustomVar<long> MemberId { get; set; }

		public int MemberAccountId { get; set; }

		public string MemberName { get; set; }

		public CustomVar<short> FightId { get; set; }

		public CustomVar<short> TimeBeforeFightStart { get; set; }


		public AbstractPartyMemberInFightMessage() { }


		public AbstractPartyMemberInFightMessage InitAbstractPartyMemberInFightMessage(byte _reason, CustomVar<long> _memberid, int _memberaccountid, string _membername, CustomVar<short> _fightid, CustomVar<short> _timebeforefightstart)
		{

			this.Reason = _reason;
			this.MemberId = _memberid;
			this.MemberAccountId = _memberaccountid;
			this.MemberName = _membername;
			this.FightId = _fightid;
			this.TimeBeforeFightStart = _timebeforefightstart;

			return this;
		}

		public new Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(Reason);
			size += DofusBinaryFactory.Sizing.SizeOf(MemberId);
			size += DofusBinaryFactory.Sizing.SizeOf(MemberAccountId);
			size += DofusBinaryFactory.Sizing.SizeOf(MemberName);
			size += DofusBinaryFactory.Sizing.SizeOf(FightId);
			size += DofusBinaryFactory.Sizing.SizeOf(TimeBeforeFightStart);
			var parent = base.Serialize();
			size += parent.Length;


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteDatas(parent);
			writer.WriteData(this.Reason);
			writer.WriteData(this.MemberId);
			writer.WriteData(this.MemberAccountId);
			writer.WriteData(this.MemberName);
			writer.WriteData(this.FightId);
			writer.WriteData(this.TimeBeforeFightStart);

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			this.Reason = reader.Read<byte>();
			this.MemberId = reader.Read<CustomVar<long>>();
			this.MemberAccountId = reader.Read<int>();
			this.MemberName = reader.Read<string>();
			this.FightId = reader.Read<CustomVar<short>>();
			this.TimeBeforeFightStart = reader.Read<CustomVar<short>>();

		}


	}
}
