//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:57.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.context.roleplay;

namespace Renaissance.Protocol.messages.game.context.roleplay.houses.guild
{
	public class HouseGuildRightsMessage : IDofusMessage
	{
		public  const int NetworkId = 5703;
		public  int ProtocolId { get { return NetworkId; } }

		public CustomVar<int> HouseId { get; set; }

		public int InstanceId { get; set; }

		public bool SecondHand { get; set; }

		public GuildInformations GuildInfo { get; set; }

		public CustomVar<int> Rights { get; set; }


		public HouseGuildRightsMessage() { }


		public HouseGuildRightsMessage InitHouseGuildRightsMessage(CustomVar<int> _houseid, int _instanceid, bool _secondhand, GuildInformations _guildinfo, CustomVar<int> _rights)
		{

			this.HouseId = _houseid;
			this.InstanceId = _instanceid;
			this.SecondHand = _secondhand;
			this.GuildInfo = _guildinfo;
			this.Rights = _rights;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(HouseId);
			size += DofusBinaryFactory.Sizing.SizeOf(InstanceId);
			size += DofusBinaryFactory.Sizing.SizeOf(SecondHand);
			var serialized1 = this.GuildInfo.Serialize();
			size += serialized1.Length;
			size += DofusBinaryFactory.Sizing.SizeOf(Rights);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.HouseId);
			writer.WriteData(this.InstanceId);
			writer.WriteData(this.SecondHand);
			writer.WriteDatas(serialized1);
			writer.WriteData(this.Rights);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.HouseId = reader.Read<CustomVar<int>>();
			this.InstanceId = reader.Read<int>();
			this.SecondHand = reader.Read<bool>();
			this.GuildInfo = new GuildInformations();
			this.GuildInfo.Deserialize(reader);
			this.Rights = reader.Read<CustomVar<int>>();

		}


	}
}
