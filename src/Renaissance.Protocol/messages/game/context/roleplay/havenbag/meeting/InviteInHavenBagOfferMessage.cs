//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:57.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.character;

namespace Renaissance.Protocol.messages.game.context.roleplay.havenbag.meeting
{
	public class InviteInHavenBagOfferMessage : IDofusMessage
	{
		public  const int NetworkId = 6643;
		public  int ProtocolId { get { return NetworkId; } }

		public CharacterMinimalInformations HostInformations { get; set; }

		public CustomVar<int> TimeLeftBeforeCancel { get; set; }


		public InviteInHavenBagOfferMessage() { }


		public InviteInHavenBagOfferMessage InitInviteInHavenBagOfferMessage(CharacterMinimalInformations _hostinformations, CustomVar<int> _timeleftbeforecancel)
		{

			this.HostInformations = _hostinformations;
			this.TimeLeftBeforeCancel = _timeleftbeforecancel;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			var serialized1 = this.HostInformations.Serialize();
			size += serialized1.Length;
			size += DofusBinaryFactory.Sizing.SizeOf(TimeLeftBeforeCancel);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteDatas(serialized1);
			writer.WriteData(this.TimeLeftBeforeCancel);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.HostInformations = new CharacterMinimalInformations();
			this.HostInformations.Deserialize(reader);
			this.TimeLeftBeforeCancel = reader.Read<CustomVar<int>>();

		}


	}
}
