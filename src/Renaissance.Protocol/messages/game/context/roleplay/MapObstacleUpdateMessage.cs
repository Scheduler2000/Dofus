//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:19.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.interactive;

namespace Renaissance.Protocol.messages.game.context.roleplay
{
	public class MapObstacleUpdateMessage : IDofusMessage
	{
		public  const int NetworkId = 6051;
		public  int ProtocolId { get { return NetworkId; } }

		public MapObstacle[] Obstacles { get; set; }


		public MapObstacleUpdateMessage() { }


		public MapObstacleUpdateMessage InitMapObstacleUpdateMessage(MapObstacle[] _obstacles)
		{

			this.Obstacles = _obstacles;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write((short)(this.Obstacles.Length));
			foreach(var obj in Obstacles)
			{
				writer.Write(obj.Serialize());
			}

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			int Obstacles_length = reader.Read<short>();
			this.Obstacles = new MapObstacle[Obstacles_length];
			for(int i = 0; i < Obstacles_length; i++)
			{
				this.Obstacles[i] = new MapObstacle();
				this.Obstacles[i].Deserialize(reader);
			}

		}


	}
}
