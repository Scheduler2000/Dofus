//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:23.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using Renaissance.Binary;
using Renaissance.Binary.Definition;
using Renaissance.Protocol.types.game.context.roleplay.breach;

namespace Renaissance.Protocol.messages.game.context.roleplay.breach
{
    public class MapComplementaryInformationsBreachMessage : MapComplementaryInformationsDataMessage, IDofusMessage
	{
		public new const int NetworkId = 6791;
		public new int ProtocolId { get { return NetworkId; } }

		public CustomVar<int> Floor { get; set; }

		public byte Room { get; set; }

		public BreachBranch[] Branches { get; set; }


		public MapComplementaryInformationsBreachMessage() { }


		public MapComplementaryInformationsBreachMessage InitMapComplementaryInformationsBreachMessage(CustomVar<int> _floor, byte _room, BreachBranch[] _branches)
		{

			this.Floor = _floor;
			this.Room = _room;
			this.Branches = _branches;

			return this;
		}

		public new byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(base.Serialize());
			writer.Write(this.Floor);
			writer.Write(this.Room);
			writer.Write((short)(this.Branches.Length));
			foreach(var obj in Branches)
			{
				writer.Write(obj.Serialize());
			}

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			this.Floor = reader.Read<CustomVar<int>>();
			this.Room = reader.Read<byte>();
			int Branches_length = reader.Read<short>();
			this.Branches = new BreachBranch[Branches_length];
			for(int i = 0; i < Branches_length; i++)
			{
				this.Branches[i] = new BreachBranch();
				this.Branches[i].Deserialize(reader);
			}

		}


	}
}
