//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:24.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.game.context.roleplay.npc
{
	public class NpcDialogQuestionMessage : IDofusMessage
	{
		public  const int NetworkId = 5617;
		public  int ProtocolId { get { return NetworkId; } }

		public CustomVar<int> MessageId { get; set; }

		public string[] DialogParams { get; set; }

		public CustomVar<int>[] VisibleReplies { get; set; }


		public NpcDialogQuestionMessage() { }


		public NpcDialogQuestionMessage InitNpcDialogQuestionMessage(CustomVar<int> _messageid, string[] _dialogparams, CustomVar<int>[] _visiblereplies)
		{

			this.MessageId = _messageid;
			this.DialogParams = _dialogparams;
			this.VisibleReplies = _visiblereplies;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(this.MessageId);
			writer.Write((short)(this.DialogParams.Length));
			foreach(var item in DialogParams)
				writer.Write(item);
			writer.Write((short)(this.VisibleReplies.Length));
			foreach(var item in VisibleReplies)
				writer.Write(item);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.MessageId = reader.Read<CustomVar<int>>();
			int DialogParams_length = reader.Read<short>();
			this.DialogParams = new string[DialogParams_length];
			for(int i = 0; i < DialogParams_length; i++)
				this.DialogParams[i] = reader.Read<string>();
			int VisibleReplies_length = reader.Read<short>();
			this.VisibleReplies = new CustomVar<int>[VisibleReplies_length];
			for(int i = 0; i < VisibleReplies_length; i++)
				this.VisibleReplies[i] = reader.Read<CustomVar<int>>();

		}


	}
}
