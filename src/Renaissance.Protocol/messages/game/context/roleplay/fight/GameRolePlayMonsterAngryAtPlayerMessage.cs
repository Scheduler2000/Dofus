//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:54.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.game.context.roleplay.fight
{
	public class GameRolePlayMonsterAngryAtPlayerMessage : IDofusMessage
	{
		public  const int NetworkId = 6741;
		public  int ProtocolId { get { return NetworkId; } }

		public CustomVar<long> PlayerId { get; set; }

		public double MonsterGroupId { get; set; }

		public double AngryStartTime { get; set; }

		public double AttackTime { get; set; }


		public GameRolePlayMonsterAngryAtPlayerMessage() { }


		public GameRolePlayMonsterAngryAtPlayerMessage InitGameRolePlayMonsterAngryAtPlayerMessage(CustomVar<long> _playerid, double _monstergroupid, double _angrystarttime, double _attacktime)
		{

			this.PlayerId = _playerid;
			this.MonsterGroupId = _monstergroupid;
			this.AngryStartTime = _angrystarttime;
			this.AttackTime = _attacktime;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(PlayerId);
			size += DofusBinaryFactory.Sizing.SizeOf(MonsterGroupId);
			size += DofusBinaryFactory.Sizing.SizeOf(AngryStartTime);
			size += DofusBinaryFactory.Sizing.SizeOf(AttackTime);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.PlayerId);
			writer.WriteData(this.MonsterGroupId);
			writer.WriteData(this.AngryStartTime);
			writer.WriteData(this.AttackTime);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.PlayerId = reader.Read<CustomVar<long>>();
			this.MonsterGroupId = reader.Read<double>();
			this.AngryStartTime = reader.Read<double>();
			this.AttackTime = reader.Read<double>();

		}


	}
}
