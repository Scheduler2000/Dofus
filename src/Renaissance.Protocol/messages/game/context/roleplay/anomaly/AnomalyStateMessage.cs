//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:53.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.messages.game.context.roleplay.anomaly
{
	public class AnomalyStateMessage : IDofusMessage
	{
		public  const int NetworkId = 6831;
		public  int ProtocolId { get { return NetworkId; } }

		public CustomVar<short> SubAreaId { get; set; }

		public bool Open { get; set; }

		public CustomVar<long> ClosingTime { get; set; }


		public AnomalyStateMessage() { }


		public AnomalyStateMessage InitAnomalyStateMessage(CustomVar<short> _subareaid, bool _open, CustomVar<long> _closingtime)
		{

			this.SubAreaId = _subareaid;
			this.Open = _open;
			this.ClosingTime = _closingtime;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(SubAreaId);
			size += DofusBinaryFactory.Sizing.SizeOf(Open);
			size += DofusBinaryFactory.Sizing.SizeOf(ClosingTime);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.SubAreaId);
			writer.WriteData(this.Open);
			writer.WriteData(this.ClosingTime);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.SubAreaId = reader.Read<CustomVar<short>>();
			this.Open = reader.Read<bool>();
			this.ClosingTime = reader.Read<CustomVar<long>>();

		}


	}
}
