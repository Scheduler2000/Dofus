//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:50.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.context.fight;
using    Renaissance.Protocol.types.game.context.roleplay.party;

namespace Renaissance.Protocol.messages.game.context.roleplay
{
	public class MapRunningFightDetailsExtendedMessage : MapRunningFightDetailsMessage, IDofusMessage
	{
		public new const int NetworkId = 6500;
		public new int ProtocolId { get { return NetworkId; } }

		public NamedPartyTeam[] NamedPartyTeams { get; set; }


		public MapRunningFightDetailsExtendedMessage() { }


		public MapRunningFightDetailsExtendedMessage InitMapRunningFightDetailsExtendedMessage(NamedPartyTeam[] _namedpartyteams)
		{

			this.NamedPartyTeams = _namedpartyteams;

			return this;
		}

		public new Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.NamedPartyTeams.Length));
			var memory1 = new Memory<byte>[NamedPartyTeams.Length];
			for(int i = 0; i < NamedPartyTeams.Length; i++)
			{
				memory1[i] = this.NamedPartyTeams[i].Serialize();
				size += memory1[i].Length;
			}
			var parent = base.Serialize();
			size += parent.Length;


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteDatas(parent);
			writer.WriteData((short)(this.NamedPartyTeams.Length));
			for(int i = 0; i < memory1.Length; i++)
			{
				writer.WriteDatas(memory1[i]);
			}

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			int NamedPartyTeams_length = reader.Read<short>();
			this.NamedPartyTeams = new NamedPartyTeam[NamedPartyTeams_length];
			for(int i = 0; i < NamedPartyTeams_length; i++)
			{
				this.NamedPartyTeams[i] = new NamedPartyTeam();
				this.NamedPartyTeams[i].Deserialize(reader);
			}

		}


	}
}
