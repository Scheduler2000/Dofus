//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:57.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.connection
{
	public class GameServerInformations : IDofusType
	{
		public  const int NetworkId = 25;
		public  int ProtocolId { get { return NetworkId; } }

		public CustomVar<short> Id { get; set; }

		public byte Type { get; set; }

		public WrappedBool IsMonoAccount { get; set; }

		public byte Status { get; set; }

		public byte Completion { get; set; }

		public WrappedBool IsSelectable { get; set; }

		public byte CharactersCount { get; set; }

		public byte CharactersSlots { get; set; }

		public double Date { get; set; }


		public GameServerInformations() { }


		public GameServerInformations InitGameServerInformations(CustomVar<short> _id, byte _type, WrappedBool _ismonoaccount, byte _status, byte _completion, WrappedBool _isselectable, byte _characterscount, byte _charactersslots, double _date)
		{

			this.Id = _id;
			this.Type = _type;
			this.IsMonoAccount = _ismonoaccount;
			this.Status = _status;
			this.Completion = _completion;
			this.IsSelectable = _isselectable;
			this.CharactersCount = _characterscount;
			this.CharactersSlots = _charactersslots;
			this.Date = _date;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(Id);
			size += DofusBinaryFactory.Sizing.SizeOf(Type);
			size++;
			size += DofusBinaryFactory.Sizing.SizeOf(Status);
			size += DofusBinaryFactory.Sizing.SizeOf(Completion);
			size++;
			size += DofusBinaryFactory.Sizing.SizeOf(CharactersCount);
			size += DofusBinaryFactory.Sizing.SizeOf(CharactersSlots);
			size += DofusBinaryFactory.Sizing.SizeOf(Date);


			using DofusWriter writer = new DofusWriter(size);

			byte box = 0;
			box = writer.SetFlag(box,0,this.IsMonoAccount);
			box = writer.SetFlag(box,1,this.IsSelectable);
			writer.WriteData(box);
			writer.WriteData(this.Id);
			writer.WriteData(this.Type);
			writer.WriteData(this.Status);
			writer.WriteData(this.Completion);
			writer.WriteData(this.CharactersCount);
			writer.WriteData(this.CharactersSlots);
			writer.WriteData(this.Date);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			byte box = reader.Read<byte>();
			this.IsMonoAccount = reader.ReadFlag(box,0);
			this.IsSelectable = reader.ReadFlag(box,1);
			this.Id = reader.Read<CustomVar<short>>();
			this.Type = reader.Read<byte>();
			this.Status = reader.Read<byte>();
			this.Completion = reader.Read<byte>();
			this.CharactersCount = reader.Read<byte>();
			this.CharactersSlots = reader.Read<byte>();
			this.Date = reader.Read<double>();

		}


	}
}
