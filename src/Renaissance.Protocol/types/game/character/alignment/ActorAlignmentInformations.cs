//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:59.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.game.character.alignment
{
	public class ActorAlignmentInformations : IDofusType
	{
		public  const int NetworkId = 201;
		public  int ProtocolId { get { return NetworkId; } }

		public byte AlignmentSide { get; set; }

		public byte AlignmentValue { get; set; }

		public byte AlignmentGrade { get; set; }

		public double CharacterPower { get; set; }


		public ActorAlignmentInformations() { }


		public ActorAlignmentInformations InitActorAlignmentInformations(byte _alignmentside, byte _alignmentvalue, byte _alignmentgrade, double _characterpower)
		{

			this.AlignmentSide = _alignmentside;
			this.AlignmentValue = _alignmentvalue;
			this.AlignmentGrade = _alignmentgrade;
			this.CharacterPower = _characterpower;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(AlignmentSide);
			size += DofusBinaryFactory.Sizing.SizeOf(AlignmentValue);
			size += DofusBinaryFactory.Sizing.SizeOf(AlignmentGrade);
			size += DofusBinaryFactory.Sizing.SizeOf(CharacterPower);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.AlignmentSide);
			writer.WriteData(this.AlignmentValue);
			writer.WriteData(this.AlignmentGrade);
			writer.WriteData(this.CharacterPower);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.AlignmentSide = reader.Read<byte>();
			this.AlignmentValue = reader.Read<byte>();
			this.AlignmentGrade = reader.Read<byte>();
			this.CharacterPower = reader.Read<double>();

		}


	}
}
