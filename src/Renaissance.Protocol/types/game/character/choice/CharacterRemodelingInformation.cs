//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:59.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.character;

namespace Renaissance.Protocol.types.game.character.choice
{
	public class CharacterRemodelingInformation : AbstractCharacterInformation, IDofusType
	{
		public new const int NetworkId = 479;
		public new int ProtocolId { get { return NetworkId; } }

		public string Name { get; set; }

		public byte Breed { get; set; }

		public bool Sex { get; set; }

		public CustomVar<short> CosmeticId { get; set; }

		public int[] Colors { get; set; }


		public CharacterRemodelingInformation() { }


		public CharacterRemodelingInformation InitCharacterRemodelingInformation(CustomVar<long> _id, string _name, byte _breed, bool _sex, CustomVar<short> _cosmeticid, int[] _colors)
		{

			base.Id = _id;
			this.Name = _name;
			this.Breed = _breed;
			this.Sex = _sex;
			this.CosmeticId = _cosmeticid;
			this.Colors = _colors;

			return this;
		}

		public new Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(Name);
			size += DofusBinaryFactory.Sizing.SizeOf(Breed);
			size += DofusBinaryFactory.Sizing.SizeOf(Sex);
			size += DofusBinaryFactory.Sizing.SizeOf(CosmeticId);
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.Colors.Length));
			size += DofusBinaryFactory.Sizing.SizeOf(Colors);
			var parent = base.Serialize();
			size += parent.Length;


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteDatas(parent);
			writer.WriteData(this.Name);
			writer.WriteData(this.Breed);
			writer.WriteData(this.Sex);
			writer.WriteData(this.CosmeticId);
			writer.WriteData((short)(this.Colors.Length));
			writer.WriteDatas(Colors);

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			this.Name = reader.Read<string>();
			this.Breed = reader.Read<byte>();
			this.Sex = reader.Read<bool>();
			this.CosmeticId = reader.Read<CustomVar<short>>();
			int Colors_length = reader.Read<short>();
			this.Colors = new int[Colors_length];
			for(int i = 0; i < Colors_length; i++)
				this.Colors[i] = reader.Read<int>();

		}


	}
}
