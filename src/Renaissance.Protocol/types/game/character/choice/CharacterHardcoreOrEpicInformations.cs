//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:29.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.look;

namespace Renaissance.Protocol.types.game.character.choice
{
	public class CharacterHardcoreOrEpicInformations : CharacterBaseInformations, IDofusType
	{
		public new const int NetworkId = 474;
		public new int ProtocolId { get { return NetworkId; } }

		public byte DeathState { get; set; }

		public CustomVar<short> DeathCount { get; set; }

		public CustomVar<short> DeathMaxLevel { get; set; }


		public CharacterHardcoreOrEpicInformations() { }


		public CharacterHardcoreOrEpicInformations InitCharacterHardcoreOrEpicInformations(byte _deathstate, CustomVar<short> _deathcount, CustomVar<short> _deathmaxlevel)
		{

			this.DeathState = _deathstate;
			this.DeathCount = _deathcount;
			this.DeathMaxLevel = _deathmaxlevel;

			return this;
		}

		public new byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(base.Serialize());
			writer.Write(this.DeathState);
			writer.Write(this.DeathCount);
			writer.Write(this.DeathMaxLevel);

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			this.DeathState = reader.Read<byte>();
			this.DeathCount = reader.Read<CustomVar<short>>();
			this.DeathMaxLevel = reader.Read<CustomVar<short>>();

		}


	}
}
