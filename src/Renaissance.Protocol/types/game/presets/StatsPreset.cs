//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:59.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.game.presets
{
	public class StatsPreset : Preset, IDofusType
	{
		public new const int NetworkId = 521;
		public new int ProtocolId { get { return NetworkId; } }

		public SimpleCharacterCharacteristicForPreset[] Stats { get; set; }


		public StatsPreset() { }


		public StatsPreset InitStatsPreset(short _id, SimpleCharacterCharacteristicForPreset[] _stats)
		{

			base.Id = _id;
			this.Stats = _stats;

			return this;
		}

		public new Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.Stats.Length));
			var memory1 = new Memory<byte>[Stats.Length];
			for(int i = 0; i < Stats.Length; i++)
			{
				memory1[i] = this.Stats[i].Serialize();
				size += memory1[i].Length;
			}
			var parent = base.Serialize();
			size += parent.Length;


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteDatas(parent);
			writer.WriteData((short)(this.Stats.Length));
			for(int i = 0; i < memory1.Length; i++)
			{
				writer.WriteDatas(memory1[i]);
			}

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			int Stats_length = reader.Read<short>();
			this.Stats = new SimpleCharacterCharacteristicForPreset[Stats_length];
			for(int i = 0; i < Stats_length; i++)
			{
				this.Stats[i] = new SimpleCharacterCharacteristicForPreset();
				this.Stats[i].Deserialize(reader);
			}

		}


	}
}
