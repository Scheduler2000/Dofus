//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:28.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.look;

namespace Renaissance.Protocol.types.game.presets
{
	public class ItemsPreset : Preset, IDofusType
	{
		public new const int NetworkId = 517;
		public new int ProtocolId { get { return NetworkId; } }

		public ItemForPreset[] Items { get; set; }

		public bool MountEquipped { get; set; }

		public EntityLook Look { get; set; }


		public ItemsPreset() { }


		public ItemsPreset InitItemsPreset(ItemForPreset[] _items, bool _mountequipped, EntityLook _look)
		{

			this.Items = _items;
			this.MountEquipped = _mountequipped;
			this.Look = _look;

			return this;
		}

		public new byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(base.Serialize());
			writer.Write((short)(this.Items.Length));
			foreach(var obj in Items)
			{
				writer.Write(obj.Serialize());
			}
			writer.Write(this.MountEquipped);
			writer.Write(this.Look.Serialize());

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			int Items_length = reader.Read<short>();
			this.Items = new ItemForPreset[Items_length];
			for(int i = 0; i < Items_length; i++)
			{
				this.Items[i] = new ItemForPreset();
				this.Items[i].Deserialize(reader);
			}
			this.MountEquipped = reader.Read<bool>();
			this.Look = new EntityLook();
			this.Look.Deserialize(reader);

		}


	}
}
