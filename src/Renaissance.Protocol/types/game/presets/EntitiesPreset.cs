//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:28.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.game.presets
{
	public class EntitiesPreset : Preset, IDofusType
	{
		public new const int NetworkId = 545;
		public new int ProtocolId { get { return NetworkId; } }

		public short IconId { get; set; }

		public CustomVar<short>[] EntityIds { get; set; }


		public EntitiesPreset() { }


		public EntitiesPreset InitEntitiesPreset(short _iconid, CustomVar<short>[] _entityids)
		{

			this.IconId = _iconid;
			this.EntityIds = _entityids;

			return this;
		}

		public new byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(base.Serialize());
			writer.Write(this.IconId);
			writer.Write((short)(this.EntityIds.Length));
			foreach(var item in EntityIds)
				writer.Write(item);

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			this.IconId = reader.Read<short>();
			int EntityIds_length = reader.Read<short>();
			this.EntityIds = new CustomVar<short>[EntityIds_length];
			for(int i = 0; i < EntityIds_length; i++)
				this.EntityIds[i] = reader.Read<CustomVar<short>>();

		}


	}
}
