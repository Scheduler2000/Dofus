//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:59.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.data.items;

namespace Renaissance.Protocol.types.game.startup
{
	public class StartupActionAddObject : IDofusType
	{
		public  const int NetworkId = 52;
		public  int ProtocolId { get { return NetworkId; } }

		public int Uid { get; set; }

		public string Title { get; set; }

		public string Text { get; set; }

		public string DescUrl { get; set; }

		public string PictureUrl { get; set; }

		public ObjectItemInformationWithQuantity[] Items { get; set; }


		public StartupActionAddObject() { }


		public StartupActionAddObject InitStartupActionAddObject(int _uid, string _title, string _text, string _descurl, string _pictureurl, ObjectItemInformationWithQuantity[] _items)
		{

			this.Uid = _uid;
			this.Title = _title;
			this.Text = _text;
			this.DescUrl = _descurl;
			this.PictureUrl = _pictureurl;
			this.Items = _items;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(Uid);
			size += DofusBinaryFactory.Sizing.SizeOf(Title);
			size += DofusBinaryFactory.Sizing.SizeOf(Text);
			size += DofusBinaryFactory.Sizing.SizeOf(DescUrl);
			size += DofusBinaryFactory.Sizing.SizeOf(PictureUrl);
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.Items.Length));
			var memory1 = new Memory<byte>[Items.Length];
			for(int i = 0; i < Items.Length; i++)
			{
				memory1[i] = this.Items[i].Serialize();
				size += memory1[i].Length;
			}


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.Uid);
			writer.WriteData(this.Title);
			writer.WriteData(this.Text);
			writer.WriteData(this.DescUrl);
			writer.WriteData(this.PictureUrl);
			writer.WriteData((short)(this.Items.Length));
			for(int i = 0; i < memory1.Length; i++)
			{
				writer.WriteDatas(memory1[i]);
			}

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.Uid = reader.Read<int>();
			this.Title = reader.Read<string>();
			this.Text = reader.Read<string>();
			this.DescUrl = reader.Read<string>();
			this.PictureUrl = reader.Read<string>();
			int Items_length = reader.Read<short>();
			this.Items = new ObjectItemInformationWithQuantity[Items_length];
			for(int i = 0; i < Items_length; i++)
			{
				this.Items[i] = new ObjectItemInformationWithQuantity();
				this.Items[i].Deserialize(reader);
			}

		}


	}
}
