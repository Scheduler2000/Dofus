//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:59.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.game.prism
{
	public class PrismInformation : IDofusType
	{
		public  const int NetworkId = 428;
		public  int ProtocolId { get { return NetworkId; } }

		public byte TypeId { get; set; }

		public byte State { get; set; }

		public int NextVulnerabilityDate { get; set; }

		public int PlacementDate { get; set; }

		public CustomVar<int> RewardTokenCount { get; set; }


		public PrismInformation() { }


		public PrismInformation InitPrismInformation(byte _typeid, byte _state, int _nextvulnerabilitydate, int _placementdate, CustomVar<int> _rewardtokencount)
		{

			this.TypeId = _typeid;
			this.State = _state;
			this.NextVulnerabilityDate = _nextvulnerabilitydate;
			this.PlacementDate = _placementdate;
			this.RewardTokenCount = _rewardtokencount;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(TypeId);
			size += DofusBinaryFactory.Sizing.SizeOf(State);
			size += DofusBinaryFactory.Sizing.SizeOf(NextVulnerabilityDate);
			size += DofusBinaryFactory.Sizing.SizeOf(PlacementDate);
			size += DofusBinaryFactory.Sizing.SizeOf(RewardTokenCount);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.TypeId);
			writer.WriteData(this.State);
			writer.WriteData(this.NextVulnerabilityDate);
			writer.WriteData(this.PlacementDate);
			writer.WriteData(this.RewardTokenCount);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.TypeId = reader.Read<byte>();
			this.State = reader.Read<byte>();
			this.NextVulnerabilityDate = reader.Read<int>();
			this.PlacementDate = reader.Read<int>();
			this.RewardTokenCount = reader.Read<CustomVar<int>>();

		}


	}
}
