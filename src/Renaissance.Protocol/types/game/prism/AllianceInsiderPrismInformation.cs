//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:59.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.data.items;

namespace Renaissance.Protocol.types.game.prism
{
	public class AllianceInsiderPrismInformation : PrismInformation, IDofusType
	{
		public new const int NetworkId = 431;
		public new int ProtocolId { get { return NetworkId; } }

		public int LastTimeSlotModificationDate { get; set; }

		public CustomVar<int> LastTimeSlotModificationAuthorGuildId { get; set; }

		public CustomVar<long> LastTimeSlotModificationAuthorId { get; set; }

		public string LastTimeSlotModificationAuthorName { get; set; }

		public ObjectItem[] ModulesObjects { get; set; }


		public AllianceInsiderPrismInformation() { }


		public AllianceInsiderPrismInformation InitAllianceInsiderPrismInformation(int _lasttimeslotmodificationdate, CustomVar<int> _lasttimeslotmodificationauthorguildid, CustomVar<long> _lasttimeslotmodificationauthorid, string _lasttimeslotmodificationauthorname, ObjectItem[] _modulesobjects)
		{

			this.LastTimeSlotModificationDate = _lasttimeslotmodificationdate;
			this.LastTimeSlotModificationAuthorGuildId = _lasttimeslotmodificationauthorguildid;
			this.LastTimeSlotModificationAuthorId = _lasttimeslotmodificationauthorid;
			this.LastTimeSlotModificationAuthorName = _lasttimeslotmodificationauthorname;
			this.ModulesObjects = _modulesobjects;

			return this;
		}

		public new Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(LastTimeSlotModificationDate);
			size += DofusBinaryFactory.Sizing.SizeOf(LastTimeSlotModificationAuthorGuildId);
			size += DofusBinaryFactory.Sizing.SizeOf(LastTimeSlotModificationAuthorId);
			size += DofusBinaryFactory.Sizing.SizeOf(LastTimeSlotModificationAuthorName);
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.ModulesObjects.Length));
			var memory1 = new Memory<byte>[ModulesObjects.Length];
			for(int i = 0; i < ModulesObjects.Length; i++)
			{
				memory1[i] = this.ModulesObjects[i].Serialize();
				size += memory1[i].Length;
			}
			var parent = base.Serialize();
			size += parent.Length;


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteDatas(parent);
			writer.WriteData(this.LastTimeSlotModificationDate);
			writer.WriteData(this.LastTimeSlotModificationAuthorGuildId);
			writer.WriteData(this.LastTimeSlotModificationAuthorId);
			writer.WriteData(this.LastTimeSlotModificationAuthorName);
			writer.WriteData((short)(this.ModulesObjects.Length));
			for(int i = 0; i < memory1.Length; i++)
			{
				writer.WriteDatas(memory1[i]);
			}

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			this.LastTimeSlotModificationDate = reader.Read<int>();
			this.LastTimeSlotModificationAuthorGuildId = reader.Read<CustomVar<int>>();
			this.LastTimeSlotModificationAuthorId = reader.Read<CustomVar<long>>();
			this.LastTimeSlotModificationAuthorName = reader.Read<string>();
			int ModulesObjects_length = reader.Read<short>();
			this.ModulesObjects = new ObjectItem[ModulesObjects_length];
			for(int i = 0; i < ModulesObjects_length; i++)
			{
				this.ModulesObjects[i] = new ObjectItem();
				this.ModulesObjects[i].Deserialize(reader);
			}

		}


	}
}
