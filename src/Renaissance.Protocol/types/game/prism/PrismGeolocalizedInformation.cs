//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:59.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.game.prism
{
	public class PrismGeolocalizedInformation : PrismSubareaEmptyInfo, IDofusType
	{
		public new const int NetworkId = 434;
		public new int ProtocolId { get { return NetworkId; } }

		public short WorldX { get; set; }

		public short WorldY { get; set; }

		public double MapId { get; set; }

		public PrismInformation Prism { get; set; }


		public PrismGeolocalizedInformation() { }


		public PrismGeolocalizedInformation InitPrismGeolocalizedInformation(short _worldx, short _worldy, double _mapid, PrismInformation _prism)
		{

			this.WorldX = _worldx;
			this.WorldY = _worldy;
			this.MapId = _mapid;
			this.Prism = _prism;

			return this;
		}

		public new Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(WorldX);
			size += DofusBinaryFactory.Sizing.SizeOf(WorldY);
			size += DofusBinaryFactory.Sizing.SizeOf(MapId);
			size += 2;
			var serialized1 = this.Prism.Serialize();
			size += serialized1.Length;
			var parent = base.Serialize();
			size += parent.Length;


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteDatas(parent);
			writer.WriteData(this.WorldX);
			writer.WriteData(this.WorldY);
			writer.WriteData(this.MapId);
			writer.WriteData((short)(Prism.ProtocolId));
			writer.WriteDatas(serialized1);

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			this.WorldX = reader.Read<short>();
			this.WorldY = reader.Read<short>();
			this.MapId = reader.Read<double>();
			reader.Skip(2); // skip protocolManager.GetInstance(short)
			this.Prism = new PrismInformation();
			this.Prism.Deserialize(reader);

		}


	}
}
