//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:29.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.game.actions.fight
{
	public class AbstractFightDispellableEffect : IDofusType
	{
		public  const int NetworkId = 206;
		public  int ProtocolId { get { return NetworkId; } }

		public CustomVar<int> Uid { get; set; }

		public double TargetId { get; set; }

		public short TurnDuration { get; set; }

		public byte Dispelable { get; set; }

		public CustomVar<short> SpellId { get; set; }

		public CustomVar<int> EffectId { get; set; }

		public CustomVar<int> ParentBoostUid { get; set; }


		public AbstractFightDispellableEffect() { }


		public AbstractFightDispellableEffect InitAbstractFightDispellableEffect(CustomVar<int> _uid, double _targetid, short _turnduration, byte _dispelable, CustomVar<short> _spellid, CustomVar<int> _effectid, CustomVar<int> _parentboostuid)
		{

			this.Uid = _uid;
			this.TargetId = _targetid;
			this.TurnDuration = _turnduration;
			this.Dispelable = _dispelable;
			this.SpellId = _spellid;
			this.EffectId = _effectid;
			this.ParentBoostUid = _parentboostuid;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(this.Uid);
			writer.Write(this.TargetId);
			writer.Write(this.TurnDuration);
			writer.Write(this.Dispelable);
			writer.Write(this.SpellId);
			writer.Write(this.EffectId);
			writer.Write(this.ParentBoostUid);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.Uid = reader.Read<CustomVar<int>>();
			this.TargetId = reader.Read<double>();
			this.TurnDuration = reader.Read<short>();
			this.Dispelable = reader.Read<byte>();
			this.SpellId = reader.Read<CustomVar<short>>();
			this.EffectId = reader.Read<CustomVar<int>>();
			this.ParentBoostUid = reader.Read<CustomVar<int>>();

		}


	}
}
