//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:28.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.game.interactive
{
	public class InteractiveElement : IDofusType
	{
		public  const int NetworkId = 80;
		public  int ProtocolId { get { return NetworkId; } }

		public int ElementId { get; set; }

		public int ElementTypeId { get; set; }

		public InteractiveElementSkill[] EnabledSkills { get; set; }

		public InteractiveElementSkill[] DisabledSkills { get; set; }

		public bool OnCurrentMap { get; set; }


		public InteractiveElement() { }


		public InteractiveElement InitInteractiveElement(int _elementid, int _elementtypeid, InteractiveElementSkill[] _enabledskills, InteractiveElementSkill[] _disabledskills, bool _oncurrentmap)
		{

			this.ElementId = _elementid;
			this.ElementTypeId = _elementtypeid;
			this.EnabledSkills = _enabledskills;
			this.DisabledSkills = _disabledskills;
			this.OnCurrentMap = _oncurrentmap;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(this.ElementId);
			writer.Write(this.ElementTypeId);
			writer.Write((short)(this.EnabledSkills.Length));
			foreach(var obj in EnabledSkills)
			{
				writer.Write((short)(obj.ProtocolId));
				writer.Write(obj.Serialize());
			}
			writer.Write((short)(this.DisabledSkills.Length));
			foreach(var obj in DisabledSkills)
			{
				writer.Write((short)(obj.ProtocolId));
				writer.Write(obj.Serialize());
			}
			writer.Write(this.OnCurrentMap);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.ElementId = reader.Read<int>();
			this.ElementTypeId = reader.Read<int>();
			int EnabledSkills_length = reader.Read<short>();
			this.EnabledSkills = new InteractiveElementSkill[EnabledSkills_length];
			for(int i = 0; i < EnabledSkills_length; i++)
			{
reader.Skip(2); // skip read short for protocolManager.GetInstance(short)
				this.EnabledSkills[i] = new InteractiveElementSkill();
				this.EnabledSkills[i].Deserialize(reader);
			}
			int DisabledSkills_length = reader.Read<short>();
			this.DisabledSkills = new InteractiveElementSkill[DisabledSkills_length];
			for(int i = 0; i < DisabledSkills_length; i++)
			{
reader.Skip(2); // skip read short for protocolManager.GetInstance(short)
				this.DisabledSkills[i] = new InteractiveElementSkill();
				this.DisabledSkills[i].Deserialize(reader);
			}
			this.OnCurrentMap = reader.Read<bool>();

		}


	}
}
