//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:27.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.character;

namespace Renaissance.Protocol.types.game.dare
{
	public class DareInformations : IDofusType
	{
		public  const int NetworkId = 502;
		public  int ProtocolId { get { return NetworkId; } }

		public double DareId { get; set; }

		public CharacterBasicMinimalInformations Creator { get; set; }

		public CustomVar<long> SubscriptionFee { get; set; }

		public CustomVar<long> Jackpot { get; set; }

		public short MaxCountWinners { get; set; }

		public double EndDate { get; set; }

		public bool IsPrivate { get; set; }

		public CustomVar<int> GuildId { get; set; }

		public CustomVar<int> AllianceId { get; set; }

		public DareCriteria[] Criterions { get; set; }

		public double StartDate { get; set; }


		public DareInformations() { }


		public DareInformations InitDareInformations(double _dareid, CharacterBasicMinimalInformations _creator, CustomVar<long> _subscriptionfee, CustomVar<long> _jackpot, short _maxcountwinners, double _enddate, bool _isprivate, CustomVar<int> _guildid, CustomVar<int> _allianceid, DareCriteria[] _criterions, double _startdate)
		{

			this.DareId = _dareid;
			this.Creator = _creator;
			this.SubscriptionFee = _subscriptionfee;
			this.Jackpot = _jackpot;
			this.MaxCountWinners = _maxcountwinners;
			this.EndDate = _enddate;
			this.IsPrivate = _isprivate;
			this.GuildId = _guildid;
			this.AllianceId = _allianceid;
			this.Criterions = _criterions;
			this.StartDate = _startdate;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(this.DareId);
			writer.Write(this.Creator.Serialize());
			writer.Write(this.SubscriptionFee);
			writer.Write(this.Jackpot);
			writer.Write(this.MaxCountWinners);
			writer.Write(this.EndDate);
			writer.Write(this.IsPrivate);
			writer.Write(this.GuildId);
			writer.Write(this.AllianceId);
			writer.Write((short)(this.Criterions.Length));
			foreach(var obj in Criterions)
			{
				writer.Write(obj.Serialize());
			}
			writer.Write(this.StartDate);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.DareId = reader.Read<double>();
			this.Creator = new CharacterBasicMinimalInformations();
			this.Creator.Deserialize(reader);
			this.SubscriptionFee = reader.Read<CustomVar<long>>();
			this.Jackpot = reader.Read<CustomVar<long>>();
			this.MaxCountWinners = reader.Read<short>();
			this.EndDate = reader.Read<double>();
			this.IsPrivate = reader.Read<bool>();
			this.GuildId = reader.Read<CustomVar<int>>();
			this.AllianceId = reader.Read<CustomVar<int>>();
			int Criterions_length = reader.Read<short>();
			this.Criterions = new DareCriteria[Criterions_length];
			for(int i = 0; i < Criterions_length; i++)
			{
				this.Criterions[i] = new DareCriteria();
				this.Criterions[i].Deserialize(reader);
			}
			this.StartDate = reader.Read<double>();

		}


	}
}
