//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:58.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.game.dare
{
	public class DareCriteria : IDofusType
	{
		public  const int NetworkId = 501;
		public  int ProtocolId { get { return NetworkId; } }

		public byte Type { get; set; }

		public int[] Params { get; set; }


		public DareCriteria() { }


		public DareCriteria InitDareCriteria(byte _type, int[] _params)
		{

			this.Type = _type;
			this.Params = _params;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(Type);
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.Params.Length));
			size += DofusBinaryFactory.Sizing.SizeOf(Params);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.Type);
			writer.WriteData((short)(this.Params.Length));
			writer.WriteDatas(Params);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.Type = reader.Read<byte>();
			int Params_length = reader.Read<short>();
			this.Params = new int[Params_length];
			for(int i = 0; i < Params_length; i++)
				this.Params[i] = reader.Read<int>();

		}


	}
}
