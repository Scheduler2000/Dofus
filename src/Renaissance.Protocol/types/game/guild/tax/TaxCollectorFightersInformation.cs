//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:51:01.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.character;

namespace Renaissance.Protocol.types.game.guild.tax
{
	public class TaxCollectorFightersInformation : IDofusType
	{
		public  const int NetworkId = 169;
		public  int ProtocolId { get { return NetworkId; } }

		public double CollectorId { get; set; }

		public CharacterMinimalPlusLookInformations[] AllyCharactersInformations { get; set; }

		public CharacterMinimalPlusLookInformations[] EnemyCharactersInformations { get; set; }


		public TaxCollectorFightersInformation() { }


		public TaxCollectorFightersInformation InitTaxCollectorFightersInformation(double _collectorid, CharacterMinimalPlusLookInformations[] _allycharactersinformations, CharacterMinimalPlusLookInformations[] _enemycharactersinformations)
		{

			this.CollectorId = _collectorid;
			this.AllyCharactersInformations = _allycharactersinformations;
			this.EnemyCharactersInformations = _enemycharactersinformations;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(CollectorId);
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.AllyCharactersInformations.Length));
			var memory1 = new Memory<byte>[AllyCharactersInformations.Length];
			for(int i = 0; i < AllyCharactersInformations.Length; i++)
			{
				size += DofusBinaryFactory.Sizing.SizeOf((short)(this.AllyCharactersInformations[i].ProtocolId));
				memory1[i] = this.AllyCharactersInformations[i].Serialize();
				size += memory1[i].Length;
			}
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.EnemyCharactersInformations.Length));
			var memory2 = new Memory<byte>[EnemyCharactersInformations.Length];
			for(int i = 0; i < EnemyCharactersInformations.Length; i++)
			{
				size += DofusBinaryFactory.Sizing.SizeOf((short)(this.EnemyCharactersInformations[i].ProtocolId));
				memory2[i] = this.EnemyCharactersInformations[i].Serialize();
				size += memory2[i].Length;
			}


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.CollectorId);
			writer.WriteData((short)(this.AllyCharactersInformations.Length));
			for(int i = 0; i < memory1.Length; i++)
			{
				writer.WriteData((short)(AllyCharactersInformations[i].ProtocolId));
				writer.WriteDatas(memory1[i]);
			}
			writer.WriteData((short)(this.EnemyCharactersInformations.Length));
			for(int i = 0; i < memory2.Length; i++)
			{
				writer.WriteData((short)(EnemyCharactersInformations[i].ProtocolId));
				writer.WriteDatas(memory2[i]);
			}

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.CollectorId = reader.Read<double>();
			int AllyCharactersInformations_length = reader.Read<short>();
			this.AllyCharactersInformations = new CharacterMinimalPlusLookInformations[AllyCharactersInformations_length];
			for(int i = 0; i < AllyCharactersInformations_length; i++)
			{
			reader.Skip(2); // skip protocolManager.GetInstance(short)
				this.AllyCharactersInformations[i] = new CharacterMinimalPlusLookInformations();
				this.AllyCharactersInformations[i].Deserialize(reader);
			}
			int EnemyCharactersInformations_length = reader.Read<short>();
			this.EnemyCharactersInformations = new CharacterMinimalPlusLookInformations[EnemyCharactersInformations_length];
			for(int i = 0; i < EnemyCharactersInformations_length; i++)
			{
			reader.Skip(2); // skip protocolManager.GetInstance(short)
				this.EnemyCharactersInformations[i] = new CharacterMinimalPlusLookInformations();
				this.EnemyCharactersInformations[i].Deserialize(reader);
			}

		}


	}
}
