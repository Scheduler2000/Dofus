//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:31.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.character;

namespace Renaissance.Protocol.types.game.guild.tax
{
	public class TaxCollectorFightersInformation : IDofusType
	{
		public  const int NetworkId = 169;
		public  int ProtocolId { get { return NetworkId; } }

		public double CollectorId { get; set; }

		public CharacterMinimalPlusLookInformations[] AllyCharactersInformations { get; set; }

		public CharacterMinimalPlusLookInformations[] EnemyCharactersInformations { get; set; }


		public TaxCollectorFightersInformation() { }


		public TaxCollectorFightersInformation InitTaxCollectorFightersInformation(double _collectorid, CharacterMinimalPlusLookInformations[] _allycharactersinformations, CharacterMinimalPlusLookInformations[] _enemycharactersinformations)
		{

			this.CollectorId = _collectorid;
			this.AllyCharactersInformations = _allycharactersinformations;
			this.EnemyCharactersInformations = _enemycharactersinformations;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(this.CollectorId);
			writer.Write((short)(this.AllyCharactersInformations.Length));
			foreach(var obj in AllyCharactersInformations)
			{
				writer.Write((short)(obj.ProtocolId));
				writer.Write(obj.Serialize());
			}
			writer.Write((short)(this.EnemyCharactersInformations.Length));
			foreach(var obj in EnemyCharactersInformations)
			{
				writer.Write((short)(obj.ProtocolId));
				writer.Write(obj.Serialize());
			}

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.CollectorId = reader.Read<double>();
			int AllyCharactersInformations_length = reader.Read<short>();
			this.AllyCharactersInformations = new CharacterMinimalPlusLookInformations[AllyCharactersInformations_length];
			for(int i = 0; i < AllyCharactersInformations_length; i++)
			{
reader.Skip(2); // skip read short for protocolManager.GetInstance(short)
				this.AllyCharactersInformations[i] = new CharacterMinimalPlusLookInformations();
				this.AllyCharactersInformations[i].Deserialize(reader);
			}
			int EnemyCharactersInformations_length = reader.Read<short>();
			this.EnemyCharactersInformations = new CharacterMinimalPlusLookInformations[EnemyCharactersInformations_length];
			for(int i = 0; i < EnemyCharactersInformations_length; i++)
			{
reader.Skip(2); // skip read short for protocolManager.GetInstance(short)
				this.EnemyCharactersInformations[i] = new CharacterMinimalPlusLookInformations();
				this.EnemyCharactersInformations[i].Deserialize(reader);
			}

		}


	}
}
