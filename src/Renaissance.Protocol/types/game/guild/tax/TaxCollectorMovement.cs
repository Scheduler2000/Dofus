//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:51:01.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.game.guild.tax
{
	public class TaxCollectorMovement : IDofusType
	{
		public  const int NetworkId = 493;
		public  int ProtocolId { get { return NetworkId; } }

		public byte MovementType { get; set; }

		public TaxCollectorBasicInformations BasicInfos { get; set; }

		public CustomVar<long> PlayerId { get; set; }

		public string PlayerName { get; set; }


		public TaxCollectorMovement() { }


		public TaxCollectorMovement InitTaxCollectorMovement(byte _movementtype, TaxCollectorBasicInformations _basicinfos, CustomVar<long> _playerid, string _playername)
		{

			this.MovementType = _movementtype;
			this.BasicInfos = _basicinfos;
			this.PlayerId = _playerid;
			this.PlayerName = _playername;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(MovementType);
			var serialized1 = this.BasicInfos.Serialize();
			size += serialized1.Length;
			size += DofusBinaryFactory.Sizing.SizeOf(PlayerId);
			size += DofusBinaryFactory.Sizing.SizeOf(PlayerName);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.MovementType);
			writer.WriteDatas(serialized1);
			writer.WriteData(this.PlayerId);
			writer.WriteData(this.PlayerName);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.MovementType = reader.Read<byte>();
			this.BasicInfos = new TaxCollectorBasicInformations();
			this.BasicInfos.Deserialize(reader);
			this.PlayerId = reader.Read<CustomVar<long>>();
			this.PlayerName = reader.Read<string>();

		}


	}
}
