//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:28.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.game.look
{
	public class EntityLook : IDofusType
	{
		public  const int NetworkId = 55;
		public  int ProtocolId { get { return NetworkId; } }

		public CustomVar<short> BonesId { get; set; }

		public CustomVar<short>[] Skins { get; set; }

		public int[] IndexedColors { get; set; }

		public CustomVar<short>[] Scales { get; set; }

		public SubEntity[] Subentities { get; set; }


		public EntityLook() { }


		public EntityLook InitEntityLook(CustomVar<short> _bonesid, CustomVar<short>[] _skins, int[] _indexedcolors, CustomVar<short>[] _scales, SubEntity[] _subentities)
		{

			this.BonesId = _bonesid;
			this.Skins = _skins;
			this.IndexedColors = _indexedcolors;
			this.Scales = _scales;
			this.Subentities = _subentities;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(this.BonesId);
			writer.Write((short)(this.Skins.Length));
			foreach(var item in Skins)
				writer.Write(item);
			writer.Write((short)(this.IndexedColors.Length));
			foreach(var item in IndexedColors)
				writer.Write(item);
			writer.Write((short)(this.Scales.Length));
			foreach(var item in Scales)
				writer.Write(item);
			writer.Write((short)(this.Subentities.Length));
			foreach(var obj in Subentities)
			{
				writer.Write(obj.Serialize());
			}

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.BonesId = reader.Read<CustomVar<short>>();
			int Skins_length = reader.Read<short>();
			this.Skins = new CustomVar<short>[Skins_length];
			for(int i = 0; i < Skins_length; i++)
				this.Skins[i] = reader.Read<CustomVar<short>>();
			int IndexedColors_length = reader.Read<short>();
			this.IndexedColors = new int[IndexedColors_length];
			for(int i = 0; i < IndexedColors_length; i++)
				this.IndexedColors[i] = reader.Read<int>();
			int Scales_length = reader.Read<short>();
			this.Scales = new CustomVar<short>[Scales_length];
			for(int i = 0; i < Scales_length; i++)
				this.Scales[i] = reader.Read<CustomVar<short>>();
			int Subentities_length = reader.Read<short>();
			this.Subentities = new SubEntity[Subentities_length];
			for(int i = 0; i < Subentities_length; i++)
			{
				this.Subentities[i] = new SubEntity();
				this.Subentities[i].Deserialize(reader);
			}

		}


	}
}
