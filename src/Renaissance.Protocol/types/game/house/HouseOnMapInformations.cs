//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:58.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.game.house
{
	public class HouseOnMapInformations : HouseInformations, IDofusType
	{
		public new const int NetworkId = 510;
		public new int ProtocolId { get { return NetworkId; } }

		public int[] DoorsOnMap { get; set; }

		public HouseInstanceInformations[] HouseInstances { get; set; }


		public HouseOnMapInformations() { }


		public HouseOnMapInformations InitHouseOnMapInformations(CustomVar<int> _houseid, CustomVar<short> _modelid, int[] _doorsonmap, HouseInstanceInformations[] _houseinstances)
		{

			base.HouseId = _houseid;
			base.ModelId = _modelid;
			this.DoorsOnMap = _doorsonmap;
			this.HouseInstances = _houseinstances;

			return this;
		}

		public new Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.DoorsOnMap.Length));
			size += DofusBinaryFactory.Sizing.SizeOf(DoorsOnMap);
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.HouseInstances.Length));
			var memory1 = new Memory<byte>[HouseInstances.Length];
			for(int i = 0; i < HouseInstances.Length; i++)
			{
				memory1[i] = this.HouseInstances[i].Serialize();
				size += memory1[i].Length;
			}
			var parent = base.Serialize();
			size += parent.Length;


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteDatas(parent);
			writer.WriteData((short)(this.DoorsOnMap.Length));
			writer.WriteDatas(DoorsOnMap);
			writer.WriteData((short)(this.HouseInstances.Length));
			for(int i = 0; i < memory1.Length; i++)
			{
				writer.WriteDatas(memory1[i]);
			}

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			int DoorsOnMap_length = reader.Read<short>();
			this.DoorsOnMap = new int[DoorsOnMap_length];
			for(int i = 0; i < DoorsOnMap_length; i++)
				this.DoorsOnMap[i] = reader.Read<int>();
			int HouseInstances_length = reader.Read<short>();
			this.HouseInstances = new HouseInstanceInformations[HouseInstances_length];
			for(int i = 0; i < HouseInstances_length; i++)
			{
				this.HouseInstances[i] = new HouseInstanceInformations();
				this.HouseInstances[i].Deserialize(reader);
			}

		}


	}
}
