//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:29.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.actions.fight;

namespace Renaissance.Protocol.types.game.action.fight
{
	public class FightDispellableEffectExtendedInformations : IDofusType
	{
		public  const int NetworkId = 208;
		public  int ProtocolId { get { return NetworkId; } }

		public CustomVar<short> ActionId { get; set; }

		public double SourceId { get; set; }

		public AbstractFightDispellableEffect Effect { get; set; }


		public FightDispellableEffectExtendedInformations() { }


		public FightDispellableEffectExtendedInformations InitFightDispellableEffectExtendedInformations(CustomVar<short> _actionid, double _sourceid, AbstractFightDispellableEffect _effect)
		{

			this.ActionId = _actionid;
			this.SourceId = _sourceid;
			this.Effect = _effect;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(this.ActionId);
			writer.Write(this.SourceId);
			writer.Write((short)(Effect.ProtocolId));
			writer.Write(this.Effect.Serialize());

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.ActionId = reader.Read<CustomVar<short>>();
			this.SourceId = reader.Read<double>();
reader.Skip(2); // skip read short
			this.Effect = new AbstractFightDispellableEffect();
			this.Effect.Deserialize(reader);

		}


	}
}
