//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:51:00.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.game.context.fight
{
	public class SpawnCompanionInformation : SpawnInformation, IDofusType
	{
		public new const int NetworkId = 573;
		public new int ProtocolId { get { return NetworkId; } }

		public byte ModelId { get; set; }

		public CustomVar<short> Level { get; set; }

		public double SummonerId { get; set; }

		public double OwnerId { get; set; }


		public SpawnCompanionInformation() { }


		public SpawnCompanionInformation InitSpawnCompanionInformation(byte _modelid, CustomVar<short> _level, double _summonerid, double _ownerid)
		{

			this.ModelId = _modelid;
			this.Level = _level;
			this.SummonerId = _summonerid;
			this.OwnerId = _ownerid;

			return this;
		}

		public new Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(ModelId);
			size += DofusBinaryFactory.Sizing.SizeOf(Level);
			size += DofusBinaryFactory.Sizing.SizeOf(SummonerId);
			size += DofusBinaryFactory.Sizing.SizeOf(OwnerId);
			var parent = base.Serialize();
			size += parent.Length;


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteDatas(parent);
			writer.WriteData(this.ModelId);
			writer.WriteData(this.Level);
			writer.WriteData(this.SummonerId);
			writer.WriteData(this.OwnerId);

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			this.ModelId = reader.Read<byte>();
			this.Level = reader.Read<CustomVar<short>>();
			this.SummonerId = reader.Read<double>();
			this.OwnerId = reader.Read<double>();

		}


	}
}
