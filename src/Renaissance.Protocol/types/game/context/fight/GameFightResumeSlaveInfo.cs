//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:30.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.game.context.fight
{
	public class GameFightResumeSlaveInfo : IDofusType
	{
		public  const int NetworkId = 364;
		public  int ProtocolId { get { return NetworkId; } }

		public double SlaveId { get; set; }

		public GameFightSpellCooldown[] SpellCooldowns { get; set; }

		public byte SummonCount { get; set; }

		public byte BombCount { get; set; }


		public GameFightResumeSlaveInfo() { }


		public GameFightResumeSlaveInfo InitGameFightResumeSlaveInfo(double _slaveid, GameFightSpellCooldown[] _spellcooldowns, byte _summoncount, byte _bombcount)
		{

			this.SlaveId = _slaveid;
			this.SpellCooldowns = _spellcooldowns;
			this.SummonCount = _summoncount;
			this.BombCount = _bombcount;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(this.SlaveId);
			writer.Write((short)(this.SpellCooldowns.Length));
			foreach(var obj in SpellCooldowns)
			{
				writer.Write(obj.Serialize());
			}
			writer.Write(this.SummonCount);
			writer.Write(this.BombCount);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.SlaveId = reader.Read<double>();
			int SpellCooldowns_length = reader.Read<short>();
			this.SpellCooldowns = new GameFightSpellCooldown[SpellCooldowns_length];
			for(int i = 0; i < SpellCooldowns_length; i++)
			{
				this.SpellCooldowns[i] = new GameFightSpellCooldown();
				this.SpellCooldowns[i].Deserialize(reader);
			}
			this.SummonCount = reader.Read<byte>();
			this.BombCount = reader.Read<byte>();

		}


	}
}
