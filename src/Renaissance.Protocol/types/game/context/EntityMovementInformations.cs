//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:50:58.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.game.context
{
	public class EntityMovementInformations : IDofusType
	{
		public  const int NetworkId = 63;
		public  int ProtocolId { get { return NetworkId; } }

		public int Id { get; set; }

		public byte[] Steps { get; set; }


		public EntityMovementInformations() { }


		public EntityMovementInformations InitEntityMovementInformations(int _id, byte[] _steps)
		{

			this.Id = _id;
			this.Steps = _steps;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(Id);
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.Steps.Length));
			size += DofusBinaryFactory.Sizing.SizeOf(Steps);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.Id);
			writer.WriteData((short)(this.Steps.Length));
			writer.WriteDatas(Steps);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.Id = reader.Read<int>();
			int Steps_length = reader.Read<short>();
			this.Steps = new byte[Steps_length];
			for(int i = 0; i < Steps_length; i++)
				this.Steps[i] = reader.Read<byte>();

		}


	}
}
