//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:51:02.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.friend;

namespace Renaissance.Protocol.types.game.context.roleplay.fight.arena
{
	public class LeagueFriendInformations : AbstractContactInformations, IDofusType
	{
		public new const int NetworkId = 555;
		public new int ProtocolId { get { return NetworkId; } }

		public CustomVar<long> PlayerId { get; set; }

		public string PlayerName { get; set; }

		public byte Breed { get; set; }

		public bool Sex { get; set; }

		public CustomVar<short> Level { get; set; }

		public CustomVar<short> LeagueId { get; set; }

		public CustomVar<short> TotalLeaguePoints { get; set; }

		public int LadderPosition { get; set; }


		public LeagueFriendInformations() { }


		public LeagueFriendInformations InitLeagueFriendInformations(int _accountid, string _accountname, CustomVar<long> _playerid, string _playername, byte _breed, bool _sex, CustomVar<short> _level, CustomVar<short> _leagueid, CustomVar<short> _totalleaguepoints, int _ladderposition)
		{

			base.AccountId = _accountid;
			base.AccountName = _accountname;
			this.PlayerId = _playerid;
			this.PlayerName = _playername;
			this.Breed = _breed;
			this.Sex = _sex;
			this.Level = _level;
			this.LeagueId = _leagueid;
			this.TotalLeaguePoints = _totalleaguepoints;
			this.LadderPosition = _ladderposition;

			return this;
		}

		public new Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(PlayerId);
			size += DofusBinaryFactory.Sizing.SizeOf(PlayerName);
			size += DofusBinaryFactory.Sizing.SizeOf(Breed);
			size += DofusBinaryFactory.Sizing.SizeOf(Sex);
			size += DofusBinaryFactory.Sizing.SizeOf(Level);
			size += DofusBinaryFactory.Sizing.SizeOf(LeagueId);
			size += DofusBinaryFactory.Sizing.SizeOf(TotalLeaguePoints);
			size += DofusBinaryFactory.Sizing.SizeOf(LadderPosition);
			var parent = base.Serialize();
			size += parent.Length;


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteDatas(parent);
			writer.WriteData(this.PlayerId);
			writer.WriteData(this.PlayerName);
			writer.WriteData(this.Breed);
			writer.WriteData(this.Sex);
			writer.WriteData(this.Level);
			writer.WriteData(this.LeagueId);
			writer.WriteData(this.TotalLeaguePoints);
			writer.WriteData(this.LadderPosition);

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			this.PlayerId = reader.Read<CustomVar<long>>();
			this.PlayerName = reader.Read<string>();
			this.Breed = reader.Read<byte>();
			this.Sex = reader.Read<bool>();
			this.Level = reader.Read<CustomVar<short>>();
			this.LeagueId = reader.Read<CustomVar<short>>();
			this.TotalLeaguePoints = reader.Read<CustomVar<short>>();
			this.LadderPosition = reader.Read<int>();

		}


	}
}
