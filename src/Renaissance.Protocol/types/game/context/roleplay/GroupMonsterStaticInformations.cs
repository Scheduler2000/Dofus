//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:51:01.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.game.context.roleplay
{
	public class GroupMonsterStaticInformations : IDofusType
	{
		public  const int NetworkId = 140;
		public  int ProtocolId { get { return NetworkId; } }

		public MonsterInGroupLightInformations MainCreatureLightInfos { get; set; }

		public MonsterInGroupInformations[] Underlings { get; set; }


		public GroupMonsterStaticInformations() { }


		public GroupMonsterStaticInformations InitGroupMonsterStaticInformations(MonsterInGroupLightInformations _maincreaturelightinfos, MonsterInGroupInformations[] _underlings)
		{

			this.MainCreatureLightInfos = _maincreaturelightinfos;
			this.Underlings = _underlings;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			var serialized1 = this.MainCreatureLightInfos.Serialize();
			size += serialized1.Length;
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.Underlings.Length));
			var memory1 = new Memory<byte>[Underlings.Length];
			for(int i = 0; i < Underlings.Length; i++)
			{
				memory1[i] = this.Underlings[i].Serialize();
				size += memory1[i].Length;
			}


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteDatas(serialized1);
			writer.WriteData((short)(this.Underlings.Length));
			for(int i = 0; i < memory1.Length; i++)
			{
				writer.WriteDatas(memory1[i]);
			}

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.MainCreatureLightInfos = new MonsterInGroupLightInformations();
			this.MainCreatureLightInfos.Deserialize(reader);
			int Underlings_length = reader.Read<short>();
			this.Underlings = new MonsterInGroupInformations[Underlings_length];
			for(int i = 0; i < Underlings_length; i++)
			{
				this.Underlings[i] = new MonsterInGroupInformations();
				this.Underlings[i].Deserialize(reader);
			}

		}


	}
}
