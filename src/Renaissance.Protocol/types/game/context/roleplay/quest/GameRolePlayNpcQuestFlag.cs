//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:51:02.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.game.context.roleplay.quest
{
	public class GameRolePlayNpcQuestFlag : IDofusType
	{
		public  const int NetworkId = 384;
		public  int ProtocolId { get { return NetworkId; } }

		public CustomVar<short>[] QuestsToValidId { get; set; }

		public CustomVar<short>[] QuestsToStartId { get; set; }


		public GameRolePlayNpcQuestFlag() { }


		public GameRolePlayNpcQuestFlag InitGameRolePlayNpcQuestFlag(CustomVar<short>[] _queststovalidid, CustomVar<short>[] _queststostartid)
		{

			this.QuestsToValidId = _queststovalidid;
			this.QuestsToStartId = _queststostartid;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.QuestsToValidId.Length));
			size += DofusBinaryFactory.Sizing.SizeOf(QuestsToValidId);
			size += DofusBinaryFactory.Sizing.SizeOf((short)(this.QuestsToStartId.Length));
			size += DofusBinaryFactory.Sizing.SizeOf(QuestsToStartId);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData((short)(this.QuestsToValidId.Length));
			writer.WriteDatas(QuestsToValidId);
			writer.WriteData((short)(this.QuestsToStartId.Length));
			writer.WriteDatas(QuestsToStartId);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			int QuestsToValidId_length = reader.Read<short>();
			this.QuestsToValidId = new CustomVar<short>[QuestsToValidId_length];
			for(int i = 0; i < QuestsToValidId_length; i++)
				this.QuestsToValidId[i] = reader.Read<CustomVar<short>>();
			int QuestsToStartId_length = reader.Read<short>();
			this.QuestsToStartId = new CustomVar<short>[QuestsToStartId_length];
			for(int i = 0; i < QuestsToStartId_length; i++)
				this.QuestsToStartId[i] = reader.Read<CustomVar<short>>();

		}


	}
}
