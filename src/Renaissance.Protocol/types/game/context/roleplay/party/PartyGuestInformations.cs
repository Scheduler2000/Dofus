//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:31.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.character.status;
using    Renaissance.Protocol.types.game.context.roleplay.party.entity;
using    Renaissance.Protocol.types.game.look;

namespace Renaissance.Protocol.types.game.context.roleplay.party
{
	public class PartyGuestInformations : IDofusType
	{
		public  const int NetworkId = 374;
		public  int ProtocolId { get { return NetworkId; } }

		public CustomVar<long> GuestId { get; set; }

		public CustomVar<long> HostId { get; set; }

		public string Name { get; set; }

		public EntityLook GuestLook { get; set; }

		public byte Breed { get; set; }

		public bool Sex { get; set; }

		public PlayerStatus Status { get; set; }

		public PartyEntityBaseInformation[] Entities { get; set; }


		public PartyGuestInformations() { }


		public PartyGuestInformations InitPartyGuestInformations(CustomVar<long> _guestid, CustomVar<long> _hostid, string _name, EntityLook _guestlook, byte _breed, bool _sex, PlayerStatus _status, PartyEntityBaseInformation[] _entities)
		{

			this.GuestId = _guestid;
			this.HostId = _hostid;
			this.Name = _name;
			this.GuestLook = _guestlook;
			this.Breed = _breed;
			this.Sex = _sex;
			this.Status = _status;
			this.Entities = _entities;

			return this;
		}

		public  byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(this.GuestId);
			writer.Write(this.HostId);
			writer.Write(this.Name);
			writer.Write(this.GuestLook.Serialize());
			writer.Write(this.Breed);
			writer.Write(this.Sex);
			writer.Write((short)(Status.ProtocolId));
			writer.Write(this.Status.Serialize());
			writer.Write((short)(this.Entities.Length));
			foreach(var obj in Entities)
			{
				writer.Write(obj.Serialize());
			}

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.GuestId = reader.Read<CustomVar<long>>();
			this.HostId = reader.Read<CustomVar<long>>();
			this.Name = reader.Read<string>();
			this.GuestLook = new EntityLook();
			this.GuestLook.Deserialize(reader);
			this.Breed = reader.Read<byte>();
			this.Sex = reader.Read<bool>();
reader.Skip(2); // skip read short
			this.Status = new PlayerStatus();
			this.Status.Deserialize(reader);
			int Entities_length = reader.Read<short>();
			this.Entities = new PartyEntityBaseInformation[Entities_length];
			for(int i = 0; i < Entities_length; i++)
			{
				this.Entities[i] = new PartyEntityBaseInformation();
				this.Entities[i].Deserialize(reader);
			}

		}


	}
}
