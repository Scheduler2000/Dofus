//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 08/12/2019 12:51:02.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    System;
using    Renaissance.Binary;
using    Renaissance.Binary.Definition;

namespace Renaissance.Protocol.types.game.context.roleplay.party
{
	public class DungeonPartyFinderPlayer : IDofusType
	{
		public  const int NetworkId = 373;
		public  int ProtocolId { get { return NetworkId; } }

		public CustomVar<long> PlayerId { get; set; }

		public string PlayerName { get; set; }

		public byte Breed { get; set; }

		public bool Sex { get; set; }

		public CustomVar<short> Level { get; set; }


		public DungeonPartyFinderPlayer() { }


		public DungeonPartyFinderPlayer InitDungeonPartyFinderPlayer(CustomVar<long> _playerid, string _playername, byte _breed, bool _sex, CustomVar<short> _level)
		{

			this.PlayerId = _playerid;
			this.PlayerName = _playername;
			this.Breed = _breed;
			this.Sex = _sex;
			this.Level = _level;

			return this;
		}

		public  Memory<byte> Serialize()
		{

			int size = default;

			size += DofusBinaryFactory.Sizing.SizeOf(PlayerId);
			size += DofusBinaryFactory.Sizing.SizeOf(PlayerName);
			size += DofusBinaryFactory.Sizing.SizeOf(Breed);
			size += DofusBinaryFactory.Sizing.SizeOf(Sex);
			size += DofusBinaryFactory.Sizing.SizeOf(Level);


			using DofusWriter writer = new DofusWriter(size);

			writer.WriteData(this.PlayerId);
			writer.WriteData(this.PlayerName);
			writer.WriteData(this.Breed);
			writer.WriteData(this.Sex);
			writer.WriteData(this.Level);

			return writer.Data;
		}

		public  void Deserialize(DofusReader reader)
		{

			this.PlayerId = reader.Read<CustomVar<long>>();
			this.PlayerName = reader.Read<string>();
			this.Breed = reader.Read<byte>();
			this.Sex = reader.Read<bool>();
			this.Level = reader.Read<CustomVar<short>>();

		}


	}
}
