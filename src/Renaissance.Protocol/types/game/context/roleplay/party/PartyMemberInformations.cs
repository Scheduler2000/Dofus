//-------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated by a tool.
//  Generated on 07/11/2019 23:09:31.
//	Changes to this file may cause incorrect behavior !
//  Author : Scheduler.
// </auto-generated>
//-------------------------------------------------------------------------------

using    Renaissance.Binary;
using    Renaissance.Binary.Definition;
using    Renaissance.Protocol.types.game.character.choice;
using    Renaissance.Protocol.types.game.character.status;
using    Renaissance.Protocol.types.game.context.roleplay.party.entity;
using    Renaissance.Protocol.types.game.look;

namespace Renaissance.Protocol.types.game.context.roleplay.party
{
	public class PartyMemberInformations : CharacterBaseInformations, IDofusType
	{
		public new const int NetworkId = 90;
		public new int ProtocolId { get { return NetworkId; } }

		public CustomVar<int> LifePoints { get; set; }

		public CustomVar<int> MaxLifePoints { get; set; }

		public CustomVar<short> Prospecting { get; set; }

		public byte RegenRate { get; set; }

		public CustomVar<short> Initiative { get; set; }

		public byte AlignmentSide { get; set; }

		public short WorldX { get; set; }

		public short WorldY { get; set; }

		public double MapId { get; set; }

		public CustomVar<short> SubAreaId { get; set; }

		public PlayerStatus Status { get; set; }

		public PartyEntityBaseInformation[] Entities { get; set; }


		public PartyMemberInformations() { }


		public PartyMemberInformations InitPartyMemberInformations(CustomVar<int> _lifepoints, CustomVar<int> _maxlifepoints, CustomVar<short> _prospecting, byte _regenrate, CustomVar<short> _initiative, byte _alignmentside, short _worldx, short _worldy, double _mapid, CustomVar<short> _subareaid, PlayerStatus _status, PartyEntityBaseInformation[] _entities)
		{

			this.LifePoints = _lifepoints;
			this.MaxLifePoints = _maxlifepoints;
			this.Prospecting = _prospecting;
			this.RegenRate = _regenrate;
			this.Initiative = _initiative;
			this.AlignmentSide = _alignmentside;
			this.WorldX = _worldx;
			this.WorldY = _worldy;
			this.MapId = _mapid;
			this.SubAreaId = _subareaid;
			this.Status = _status;
			this.Entities = _entities;

			return this;
		}

		public new byte[] Serialize()
		{

			using DofusWriter writer = new DofusWriter();

			writer.Write(base.Serialize());
			writer.Write(this.LifePoints);
			writer.Write(this.MaxLifePoints);
			writer.Write(this.Prospecting);
			writer.Write(this.RegenRate);
			writer.Write(this.Initiative);
			writer.Write(this.AlignmentSide);
			writer.Write(this.WorldX);
			writer.Write(this.WorldY);
			writer.Write(this.MapId);
			writer.Write(this.SubAreaId);
			writer.Write((short)(Status.ProtocolId));
			writer.Write(this.Status.Serialize());
			writer.Write((short)(this.Entities.Length));
			foreach(var obj in Entities)
			{
				writer.Write((short)(obj.ProtocolId));
				writer.Write(obj.Serialize());
			}

			return writer.Data;
		}

		public new void Deserialize(DofusReader reader)
		{

			base.Deserialize(reader);
			this.LifePoints = reader.Read<CustomVar<int>>();
			this.MaxLifePoints = reader.Read<CustomVar<int>>();
			this.Prospecting = reader.Read<CustomVar<short>>();
			this.RegenRate = reader.Read<byte>();
			this.Initiative = reader.Read<CustomVar<short>>();
			this.AlignmentSide = reader.Read<byte>();
			this.WorldX = reader.Read<short>();
			this.WorldY = reader.Read<short>();
			this.MapId = reader.Read<double>();
			this.SubAreaId = reader.Read<CustomVar<short>>();
reader.Skip(2); // skip read short
			this.Status = new PlayerStatus();
			this.Status.Deserialize(reader);
			int Entities_length = reader.Read<short>();
			this.Entities = new PartyEntityBaseInformation[Entities_length];
			for(int i = 0; i < Entities_length; i++)
			{
reader.Skip(2); // skip read short for protocolManager.GetInstance(short)
				this.Entities[i] = new PartyEntityBaseInformation();
				this.Entities[i].Deserialize(reader);
			}

		}


	}
}
