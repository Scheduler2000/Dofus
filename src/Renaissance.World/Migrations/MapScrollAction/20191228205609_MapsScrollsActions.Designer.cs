// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Renaissance.World.Database.Maps.Scrolls;

namespace Renaissance.World.Migrations.MapScrollAction
{
    [DbContext(typeof(MapScrollActionContext))]
    [Migration("20191228205609_MapsScrollsActions")]
    partial class MapsScrollsActions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Renaissance.World.Database.Maps.Scrolls.MapScrollAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("BottomMapId")
                        .HasColumnType("double precision");

                    b.Property<double>("LeftMapId")
                        .HasColumnType("double precision");

                    b.Property<double>("RightMapId")
                        .HasColumnType("double precision");

                    b.Property<double>("TopMapId")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("MapsScrollsActions");
                });
#pragma warning restore 612, 618
        }
    }
}
