// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Renaissance.World.Database.Maps;

namespace Renaissance.World.Migrations.Map
{
    [DbContext(typeof(MapContext))]
    [Migration("20191229174422_Maps")]
    partial class Maps
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Renaissance.World.Database.Maps.Map", b =>
                {
                    b.Property<double>("Id")
                        .HasColumnType("double precision");

                    b.Property<List<int>>("BlueCells")
                        .HasColumnType("integer[]");

                    b.Property<int>("BottomNeighbourId")
                        .HasColumnType("integer");

                    b.Property<byte[]>("CellsBin")
                        .HasColumnType("bytea");

                    b.Property<int>("FightCellsCount")
                        .HasColumnType("integer");

                    b.Property<int>("LeftNeighbourId")
                        .HasColumnType("integer");

                    b.Property<List<int>>("OtherCells")
                        .HasColumnType("integer[]");

                    b.Property<List<int>>("RedCells")
                        .HasColumnType("integer[]");

                    b.Property<int>("RightNeighbourId")
                        .HasColumnType("integer");

                    b.Property<int>("SubAreadId")
                        .HasColumnType("integer");

                    b.Property<int>("TopNeighbourId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Maps");
                });
#pragma warning restore 612, 618
        }
    }
}
