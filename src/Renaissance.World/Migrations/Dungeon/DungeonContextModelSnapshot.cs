// <auto-generated />
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Renaissance.World.Database.Dungeons;

namespace Renaissance.World.Migrations.Dungeon
{
    [DbContext(typeof(DungeonContext))]
    partial class DungeonContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Renaissance.World.Database.Dungeons.Dungeon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("EntranceMapId")
                        .HasColumnType("double precision");

                    b.Property<double>("ExitMapId")
                        .HasColumnType("double precision");

                    b.Property<List<double>>("MapIds")
                        .HasColumnType("double precision[]");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("OptimalPlayerLevel")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Dungeons");
                });
#pragma warning restore 612, 618
        }
    }
}
